{"version":3,"sources":["components/ErrorPage.js","components/CurrencyList.js","redux/actions.js","components/details/DepositDialog.js","components/details/WithdrawDialog.js","components/details/ExchangeDialog.js","components/details/Details.js","components/header/AddCurrencyDialog.js","components/header/ResetDialog.js","components/header/Header.js","components/HistoryList.js","components/RouterMap.js","components/App.js","serviceWorker.js","redux/reducers/currencies.js","redux/reducers/history.js","redux/reducers/rates.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["withStyles","theme","empty","padding","spacing","unit","textAlign","props","classes","react_default","a","createElement","Typography_default","variant","className","Link","to","compose","paddingBottom","linkListItem","textDecoration","listItemButton","color","palette","action","active","amount","total","fontWeight","connect","state","currencies","rates","defaultCurrency","find","currency","isDefault","defaultRates","symbol","reduce","acc","Number","value","Fragment","length","List_default","component","map","key","ListItem_default","button","ListItemText_default","primary","secondary","toFixed","Divider_default","disableTypography","addHistory","payload","type","fetchRates","currencySymbol","dispatch","getState","fetch","then","handleErrors","res","json","Object","defineProperty","base","catch","error","fetchRatesFailure","response","ok","Error","statusText","DepositDialog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","Math","max","target","handleOpen","open","handleClose","handleSubmit","makeDeposit","match","params","concat","date","moment","format","root","Button_default","onClick","index_es","style","fontSize","marginLeft","Dialog_default","PaperProps","dialog","onClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","TextField_default","autoFocus","fullWidth","label","onChange","DialogActions_default","React","Component","depositCurrency","maxWidth","width","WithdrawDialog","formCurrency","min","makeWithdrawal","withdrawCurrency","ExchangeDialog","name","fromCurrency","toCurrency","fromToRate","alert","makeExchange","_this$props","objectWithoutProperties","availableCurrencies","filter","currencyRates","actionButton","DialogContentText_default","dialogText","String","select","currencyTo","helperText","SelectProps","native","marginBottom","marginRight","Details","handleDefaultChange","makeDefaultCurrency","paramCurrency","currencyRatesArr","entries","sort","b","term","primaryTypographyProps","desc","makeDefaultLink","size","actions","details_DepositDialog","details_WithdrawDialog","details_ExchangeDialog","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","_ref","_ref2","slicedToArray","scope","margin","display","marginTop","justifyContent","allCurrencies","AddCurrencyDialog","addCurrency","MenuItem_default","children","usedCurrencies","includes","ResetDialog","resetData","link","Header","handleClick","menuAnchorEl","currentTarget","AppBar_default","position","Toolbar_default","grow","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","anchorEl","Boolean","menuItem","flexGrow","minWidth","history","right","el","calendar","BrowserRouter","header_Header","Switch","Route","exact","path","render","components_CurrencyList","components_HistoryList","details_Details","ErrorPage","App","components_RouterMap","window","location","hostname","initialState","allReducers","combineReducers","arguments","newCurrency","toConsumableArray","objectSpread","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","throttle","setItem","stringify","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f35a1bf8.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    textAlign: 'center'\n  }\n})\n\nfunction ErrorPage(props) {\n  const { classes } = props\n  \n  return (\n    <Typography variant=\"h5\" className={classes.empty} >\n      Page not found. You can start from <Link to=\"/\">here</Link>.\n    </Typography>\n  )\n}\n\nErrorPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ErrorPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    paddingBottom: 0,\n    textAlign: 'center'\n  },\n  linkListItem: {\n    textDecoration: 'none'\n  },\n  listItemButton: {\n    color: theme.palette.action.active\n  },\n  amount: {\n    textAlign: 'right'\n  },\n  total: {\n    fontWeight: 'bold'\n  }\n})\n\nfunction CurrencyList(props) {\n  const { classes } = props\n  const defaultCurrency = props.currencies.find((currency) => currency.isDefault) || {}\n  const defaultRates = props.rates[defaultCurrency.symbol] || {}\n\n  const total = props.currencies.reduce((acc, currency) => {\n    if (currency.isDefault) {\n      return acc + Number(currency.value)\n    }\n    return acc + Number(currency.value) / defaultRates[currency.symbol]\n  }, 0)\n\n  return (\n    <>\n      { props.currencies.length > 0 ?\n        <List component=\"nav\">\n          {props.currencies.map((currency) =>\n            <React.Fragment key={currency.symbol}>\n              <Link to={'/details/' + currency.symbol}\n                    className={classes.linkListItem} >\n                <ListItem button classes={{ button: classes.listItemButton }}>\n                  <ListItemText primary={currency.symbol} />\n                  <ListItemText secondary={currency.isDefault ? 'Default': ''} />\n                  <ListItemText primary={Number(currency.value).toFixed(2)}\n                                className={classes.amount} />\n                </ListItem>\n              </Link>\n              <Divider />\n            </React.Fragment>\n          )}\n          <ListItem className={classes.total}>\n            <ListItemText primary=\"Total\"\n                          disableTypography={true} />\n            <ListItemText primary={total.toFixed(2) + ' ' + defaultCurrency.symbol}\n                          disableTypography={true}\n                          className={classes.amount} />\n          </ListItem>\n        </List>\n        :\n        <>\n          <Typography variant=\"h5\" className={classes.empty} >\n            Your wallet is empty.\n          </Typography>\n          <Typography variant=\"h5\" className={classes.empty} >\n            Add some currencies from the top menu.\n          </Typography>\n        </>\n      }\n    </>\n  )\n}\n\nCurrencyList.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.currencies,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps)\n)(CurrencyList)","export const addCurrency = (payload) => ({\n  type: 'ADD_CURRENCY',\n  payload\n})\n\nexport const addHistory = (payload) => ({\n  type: 'ADD_HISTORY',\n  payload\n})\n\nexport const resetData = () => ({\n  type: 'RESET_DATA'\n})\n\nexport const makeDefaultCurrency = (currencySymbol) => ({\n  type: 'MAKE_DEFAULT_CURRENCY',\n  currencySymbol\n})\n\nexport const makeDeposit = (depositCurrency) => ({\n  type: 'MAKE_DEPOSIT',\n  depositCurrency\n})\n\nexport const makeWithdrawal = (withdrawCurrency) => ({\n  type: 'MAKE_WITHDRAWAL',\n  withdrawCurrency\n})\n\nexport const makeExchange = (fromCurrency, toCurrency) => ({\n  type: 'MAKE_EXCHANGE',\n  fromCurrency,\n  toCurrency\n})\n\n// Currently there is no reducer for the failure\nexport const fetchRatesFailure = (error) => ({\n  type: 'FETCH_RATES_FAILURE',\n  payload: error\n})\n\nexport const fetchRatesSuccess = (payload) => ({\n  type: 'FETCH_RATES_SUCCESS',\n  payload: {\n    [payload.base]: payload.rates\n  }\n})\n\nexport const fetchRates = (currencySymbol) => {\n  return (dispatch, getState) => fetch('https://api.exchangeratesapi.io/latest?base=' + currencySymbol)\n    .then(handleErrors)\n    .then((res) => res.json())\n    .then((json) => {\n      dispatch(fetchRatesSuccess(json))\n    })\n    .catch((error) => dispatch(fetchRatesFailure(error)))\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeDeposit, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  }\n})\n\nclass DepositDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    this.setState({ value: Math.max(0, Number(event.target.value)) })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeDeposit({\n      symbol: this.props.match.params.currency,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      action: `Deposited ${this.state.value} ${this.props.match.params.currency}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <Button color=\"primary\" onClick={this.handleOpen} >\n          Deposit\n          <Add style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"deposit-dialog-title\"\n        >\n          <DialogTitle id=\"deposit-dialog-title\">Deposit Currency</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Deposit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nDepositDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  connect(null, { makeDeposit, addHistory }),\n  withStyles(styles)\n)(DepositDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Remove } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeWithdrawal, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  }\n})\n\nclass WithdrawDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {  \n      const formCurrency = props.currencies.find((currency) => {\n        return currency.symbol === props.match.params.currency\n      })\n      value = Math.max(0, Number(value))\n      value = Math.min(value, formCurrency.value)\n\n      return { value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  handleSubmit = () => {\n    this.props.makeWithdrawal({\n      symbol: this.props.match.params.currency,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      action: `Withdrew ${this.state.value} ${this.props.match.params.currency}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <Button color=\"secondary\" onClick={this.handleOpen} >\n          Withdraw\n          <Remove style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"withdraw-dialog-title\"\n        >\n          <DialogTitle id=\"withdraw-dialog-title\">Withdraw Currency</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Withdraw\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nWithdrawDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  connect(null, { makeWithdrawal, addHistory }),\n  withStyles(styles)\n)(WithdrawDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { CompareArrows } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeExchange, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  },\n  dialogText: {\n    marginBottom: theme.spacing.unit * 3,\n  },\n  actionButton: {\n    color: 'green'\n  },\n  select: {\n    marginRight: theme.spacing.unit * 3,\n  }\n})\n\nclass ExchangeDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: '',\n      symbol: ''\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      if (name === 'value') {\n        const fromCurrency = props.currencies.find((currency) => {\n          return currency.symbol === props.match.params.currency\n        })\n        value = Math.max(0, Number(value))\n        value = Math.min(value, fromCurrency.value)\n      }\n\n      return { [name]: value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState((state, props) => {\n      // Select the first available currency by omitting the current\n      const currency = props.currencies.find((currency) => {\n        return currency.symbol !== props.match.params.currency\n      })\n\n      return {\n        open: true,\n        value: '',\n        symbol: currency.symbol\n      }\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.value > 0) {\n      const fromCurrency = {\n        symbol: this.props.match.params.currency,\n        value: this.state.value\n      }\n      const toCurrency = {\n        symbol: this.state.symbol\n      }\n\n      const fromCurrencyRates = this.props.rates[fromCurrency.symbol] || {}\n      const fromToRate = fromCurrencyRates[toCurrency.symbol]\n      if (!fromToRate) {\n        alert('No rate for this, please try again. If that doesn\\'t help, refresh the page')\n        this.handleClose()\n        return\n      }\n      toCurrency.value = fromCurrency.value * fromToRate\n\n      this.props.makeExchange(fromCurrency, toCurrency)\n\n      this.props.addHistory({\n        action: `Exchanged ${fromCurrency.value} ${fromCurrency.symbol} for\n          ${toCurrency.value} ${toCurrency.symbol}`,\n        date: moment().format()\n      })\n\n    }\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n\n    const availableCurrencies = props.currencies.filter((currency) => {\n      return currency.symbol !== props.match.params.currency\n    })\n    const currencyRates = props.rates[props.match.params.currency] || {}\n\n    return (\n      <div className={classes.root}>\n        <Button onClick={this.handleOpen} className={classes.actionButton} >\n          Exchange\n          <CompareArrows style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"exchange-dialog-title\"\n        >\n          <DialogTitle id=\"exchange-dialog-title\">Exchange {props.match.params.currency} Currency</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dialogText}>\n              The exchange will happen with a rate of {String(currencyRates[this.state.symbol])}\n            </DialogContentText>\n            <TextField\n              select\n              label=\"Exchange To\"\n              value={this.state.currencyTo}\n              onChange={this.handleChange('symbol')}\n              helperText=\"Please select your currency\"\n              className={classes.select}\n              SelectProps={{\n                native: true\n              }}\n            >\n              {availableCurrencies.map(currency => (\n                <option key={currency.symbol} value={currency.symbol}>\n                  {currency.symbol}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} className={classes.actionButton} >\n              Exchange\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nExchangeDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { makeExchange, addHistory }),\n  withStyles(styles)\n)(ExchangeDialog)","import moment from 'moment'\nimport React, { Component } from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Divider from '@material-ui/core/Divider'\n\nimport { addHistory, fetchRates, makeDefaultCurrency } from '../../redux/actions'\nimport DepositDialog from './DepositDialog'\nimport WithdrawDialog from './WithdrawDialog'\nimport ExchangeDialog from './ExchangeDialog'\n\nconst styles = (theme) => ({\n  root: {\n    margin: theme.spacing.unit * 3\n  },\n  actions: {\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 3,\n    justifyContent: 'space-evenly'\n  },\n  makeDefaultLink: {\n    textDecoration: 'none'\n  },\n  term: {\n    maxWidth: '10em'\n  },\n  desc: {\n    fontWeight: 'bold'\n  }\n})\n\nclass Details extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isDefault: false\n    }\n  }\n\n  handleDefaultChange = () => {\n    const symbol = this.props.match.params.currency\n\n    this.props.fetchRates(symbol)\n    this.props.makeDefaultCurrency(symbol)\n    this.props.addHistory({\n      action: `Made ${symbol} the default currency`,\n      date: moment().format()\n    })\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const paramCurrency = props.match.params.currency\n    const currency = props.currencies.find((currency) => currency.symbol === paramCurrency)\n\n    const currencyRatesArr = Object.entries(props.rates[paramCurrency] || {}).sort((a, b) => {\n      return a[0] > b[0] ? 1 : -1\n    })\n\n    return (\n      <div className={classes.root}>\n        <ListItem>\n          <ListItemText primary=\"Balance\" className={classes.term} />\n          <ListItemText primary={Number(currency.value).toFixed(2) + \" \" + paramCurrency} primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider/>\n        <ListItem>\n          <ListItemText primary=\"Default Currency\" className={classes.term} />\n          <ListItemText primary={currency.isDefault ? 'Yes': 'No'} primaryTypographyProps={{className: classes.desc}} />\n          {\n            !currency.isDefault &&\n            <Link to=\"/\" className={classes.makeDefaultLink} >\n              <Button size=\"small\" onClick={this.handleDefaultChange} color=\"primary\" variant=\"contained\" >\n                Make {paramCurrency} Default\n              </Button>\n            </Link>\n          }\n        </ListItem>\n        <Divider/>\n\n        <div className={classes.actions}>\n          <DepositDialog {...props} />\n          <WithdrawDialog {...props} />\n          {\n            props.currencies.length > 1 && \n            <ExchangeDialog {...props} />\n          }\n        </div>\n        <Divider/>\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>All currency rates against the {paramCurrency}</TableCell>\n              <TableCell align=\"right\">Rate</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currencyRatesArr.map(([key, value]) => (\n              <TableRow key={key}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {key}\n                </TableCell>\n                <TableCell align=\"right\">{value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    )\n  }\n}\n\nDetails.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.currencies,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { addHistory, fetchRates, makeDefaultCurrency }),\n)(Details)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nimport { addCurrency, addHistory, fetchRates } from '../../redux/actions'\n\nconst allCurrencies = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',\n'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JPY', 'KRW',\n'MXN', 'MYR', 'NOK', 'NZD', 'PHP', 'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB',\n'TRY', 'USD', 'ZAR']\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 400\n  },\n  dialogText: {\n    marginBottom: theme.spacing.unit * 3,\n  },\n  select: {\n    marginRight: theme.spacing.unit * 3,\n  }\n})\n\nclass AddCurrencyDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      symbol: 'EUR',\n      value: ''\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n    if (name === 'value') {\n      value = Math.max(0, Number(event.target.value))\n    }\n    this.setState({ [name]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      value: '',\n      symbol: this.props.currencies[0]\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    const value = this.state.value || 0\n\n    this.props.fetchRates(this.state.symbol)\n\n    this.props.addCurrency({\n      symbol: this.state.symbol,\n      value: value\n    })\n\n    this.props.addHistory({\n      action: `Added ${this.state.symbol} with ${value} balance`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <MenuItem onClick={this.handleOpen} >\n          {this.props.children}\n        </MenuItem>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add New Currency</DialogTitle>\n\n          <DialogContent>\n            { this.props.currencies.length ?\n              <>\n                <DialogContentText className={classes.dialogText}>\n                  Pick a new currency and add it to your wallet.\n                </DialogContentText>\n\n                <TextField\n                  select\n                  autoFocus\n                  label=\"Currency\"\n                  className={classes.select}\n                  value={this.state.symbol}\n                  onChange={this.handleChange('symbol')}\n                  helperText=\"Please select your currency\"\n                  SelectProps={{\n                    native: true\n                  }}\n                >\n                  {this.props.currencies.map(symbol => (\n                    <option key={symbol} value={symbol}>\n                      {symbol}\n                    </option>\n                  ))}\n                </TextField>\n\n                <TextField\n                  label=\"Amount (optional)\"\n                  type=\"number\"\n                  value={this.state.value}\n                  onChange={this.handleChange('value')}\n                />\n              </>\n              :\n              <DialogContentText className={classes.dialogText}>\n                There are no other currencies to add.\n              </DialogContentText>\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            {this.props.currencies.length &&\n              <Button onClick={this.handleSubmit} color=\"primary\">\n                Add\n              </Button>\n            }\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nAddCurrencyDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => {\n  const usedCurrencies = state.currencies.map((currency) => currency.symbol)\n  const unusedCurrencies = [...allCurrencies].filter((currency) => !usedCurrencies.includes(currency))\n\n  return {\n    currencies: unusedCurrencies\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { addCurrency, addHistory, fetchRates }),\n  withStyles(styles)\n)(AddCurrencyDialog)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { resetData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  },\n  link: {\n    textDecoration: 'none'\n  }\n})\n\nclass ResetDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    this.props.resetData()\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <MenuItem onClick={this.handleOpen} >\n          Reset\n        </MenuItem>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"reset-dialog-title\"\n        >\n          <DialogTitle id=\"reset-dialog-title\">Reset Wallet</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dialogText}>\n              Are you sure you want to reset the wallet data? This will remove all currencies, rates and history.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className={classes.link} >\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Reset\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(null, { resetData })\n)(ResetDialog)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport AddCurrencyDialog from './AddCurrencyDialog'\nimport ResetDialog from './ResetDialog'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  menuItem: {\n    minWidth: '120px'\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { menuAnchorEl: null }\n  }\n\n  handleClick = event => {\n    this.setState({ menuAnchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ menuAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { menuAnchorEl } = this.state\n\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <Link to=\"/\" className={classes.link}>React Wallet</Link>\n          </Typography>\n          <IconButton\n            aria-owns={menuAnchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem component={AddCurrencyDialog} onClose={this.handleClose} className={classes.menuItem}>Add Currency</MenuItem>\n            <MenuItem component={Link} to=\"/history\" onClick={this.handleClose} className={classes.menuItem}>History</MenuItem>\n            <MenuItem component={ResetDialog} onClose={this.handleClose} className={classes.menuItem}>Reset Data</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Header)","import moment from 'moment'\nimport React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    paddingBottom: 0,\n    textAlign: 'center'\n  },\n  right: {\n    textAlign: 'right'\n  }\n})\n\nconst HistoryList = (props) => {\n  const { classes, history } = props\n  \n  return (\n    history.length ?\n      <List component=\"nav\">\n        {history.map((el, key) =>\n          <React.Fragment key={key}>\n            <ListItem>\n              <ListItemText primary={el.action} />\n              <ListItemText primary={moment(el.date).calendar()} className={classes.right} />\n            </ListItem>\n            <Divider />\n          </React.Fragment>\n        )}\n      </List>\n      :\n      <>\n        <Typography variant=\"h5\" className={classes.empty} >\n          Your history is empty.\n        </Typography>\n        <Typography variant=\"h5\" className={classes.empty} >\n          Add some currencies and make some exchanges to populate the list.\n        </Typography>\n      </>\n  )\n}\n\nHistoryList.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(HistoryList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ErrorPage from './ErrorPage'\nimport CurrencyList from './CurrencyList'\nimport Details from './details/Details'\nimport Header from './header/Header'\nimport HistoryList from './HistoryList'\n\nfunction RouterMap() {\n  return (\n    <Router>\n      <>\n        <Header />\n        <Switch>\n          <Route exact path='/' render={() => <CurrencyList />} />\n          <Route path='/history' render={() => <HistoryList />} />\n          <Route path='/details/:currency' render={(props) => <Details {...props} />} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </>\n    </Router>\n  )\n}\n\nexport default connect()(RouterMap)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport RouterMap from './RouterMap'\nimport { fetchRates } from '../redux/actions'\n\nclass App extends Component {\n  componentDidMount() {\n    if (this.props.currencies.length) {\n      const defaultCurrency = this.props.currencies.find((currency) => currency.isDefault)\n      this.props.fetchRates(defaultCurrency.symbol)\n    }\n  }\n\n  render() {\n    return (\n      <RouterMap />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.currencies\n})\n\nexport default connect(mapStateToProps, { fetchRates })(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","const initialState = []\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_CURRENCY': {\n      let newCurrency = action.payload\n      if (!state.length) {\n        newCurrency.isDefault = true\n      }\n      return [...state, newCurrency]\n    }\n\n    case 'MAKE_DEFAULT_CURRENCY': {\n      return state.map((currency) => {\n        if (currency.isDefault) {\n          delete currency.isDefault\n        }\n        if (currency.symbol === action.currencySymbol) {\n          currency.isDefault = true\n        }\n        return currency\n      })\n    }\n\n    case 'MAKE_DEPOSIT': {\n      return state.map((currency) => {\n        if (currency.symbol === action.depositCurrency.symbol) {\n          currency.value = Number(currency.value) + action.depositCurrency.value\n        }\n        return currency\n      })\n    }\n  \n    case 'MAKE_WITHDRAWAL': {\n      return state.map((currency) => {\n        if (currency.symbol === action.withdrawCurrency.symbol) {\n          currency.value = Math.max(0, Number(currency.value) - action.withdrawCurrency.value)\n        }\n        return currency\n      })\n    }\n  \n    case 'MAKE_EXCHANGE': {\n      return state.map((currency) => {\n        if (currency.symbol === action.fromCurrency.symbol) {\n          currency.value = Math.max(0, Number(currency.value) - action.fromCurrency.value)\n        }\n  \n        if (currency.symbol === action.toCurrency.symbol) {\n          currency.value = Number(currency.value) + action.toCurrency.value\n        }\n        return currency\n      })\n    }\n\n    default:\n      return state\n  }\n}","const initialState = []\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_HISTORY': {\n      return [action.payload, ...state]\n    }\n\n    default:\n      return state\n  }\n}","const initialState = {}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_RATES_SUCCESS': {\n      return {...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport currencies from './currencies'\nimport history from './history'\nimport rates from './rates'\n\nconst allReducers = combineReducers({\n  currencies,\n  history,\n  rates\n})\n\nexport default (state, action) => {\n  if (action.type === 'RESET_DATA') {\n    // not a state mutation, just reassigning the ref of the local var state\n    state = undefined\n  }\n\n  return allReducers(state, action)\n}\n","import { throttle } from 'lodash'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers/index'\n\nconst initialState = {\n  currencies: [],\n  history: [],\n  rates: {},\n  ...JSON.parse(localStorage.getItem('reactwallet'))\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(throttle(() => {\n  localStorage.setItem('reactwallet', JSON.stringify(store.getState()))\n}, 1000))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}