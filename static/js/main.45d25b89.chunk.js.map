{"version":3,"sources":["components/accounts/AccountItem.js","lib/helpers.js","components/common/TotalBalanceOrProgress.js","redux/actions.js","components/accounts/GroupItem.js","components/common/Notice.js","components/accounts/GroupList.js","components/error/ErrorPage.js","components/accounts/DepositDialog.js","components/accounts/DeleteAccountDialog.js","components/accounts/EditAccountDialog.js","components/accounts/WithdrawDialog.js","components/accounts/TransferDialog.js","components/accounts/Details.js","lib/constants.js","components/settings/DefaultCurrencySelect.js","components/settings/ResetDialog.js","components/settings/SettingsPage.js","components/accounts/AddAccountDialog.js","components/Header.js","components/history/HistoryList.js","components/RouterMap.js","components/App.js","serviceWorker.js","redux/reducers/groups.js","redux/reducers/settings.js","redux/reducers/index.js","redux/reducers/accounts.js","redux/reducers/history.js","redux/reducers/rates.js","redux/store.js","index.js"],"names":["compose","withStyles","theme","linkListItem","textDecoration","listItemButton","color","palette","action","active","paddingLeft","spacing","unit","paddingRight","connect","_ref","account","classes","react_default","a","createElement","Fragment","Link","to","id","className","ListItem_default","button","ListItemText_default","primary","name","Number","value","toFixed","currency","Divider_default","uniqueId","Math","random","toString","substr","getTotalBalance","accounts","rates","defaultCurrency","defaultRates","reduce","res","state","ownProps","total","settings","indexOf","CircularProgress_default","size","addAccount","payload","type","addHistory","changeDefaultCurrency","fetchRates","dispatch","getState","fetch","then","handleErrors","json","Object","defineProperty","base","catch","error","fetchRatesFailure","response","ok","Error","statusText","GroupItem","handleClick","_this","props","toggleGroup","groupId","group","collapsed","_this$props","this","length","key","onClick","common_TotalBalanceOrProgress","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","map","accounts_AccountItem","React","Component","fontWeight","marginRight","filter","sort","b","empty","paddingTop","&:last-child","paddingBottom","children","title","Typography_default","variant","lineHeight","loadButton","objectSpread","typography","subtitle1","textTransform","padding","minWidth","&:hover","backgroundColor","hasAccounts","groups","loadDemoData","ListSubheader_default","disableSticky","accounts_GroupItem","disableTypography","common_Notice","Button_default","e","text","date","moment","format","ErrorPage","DepositDialog","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","max","target","handleOpen","open","handleClose","handleSubmit","makeDeposit","accountId","concat","index_es","style","fontSize","marginLeft","Dialog_default","PaperProps","dialog","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","fullWidth","label","onChange","DialogActions_default","maxWidth","width","DeleteAccountDialog","deleteAccount","IconButton_default","aria-label","Delete_default","DialogContentText_default","dense","buttonLink","getDefaultState","nameFieldError","EditAccountDialog","field","trim","editAccount","oldGroup","find","newGroup","Edit_default","required","placeholder","InputLabelProps","shrink","select","SelectProps","native","marginTop","WithdrawDialog","min","makeWithdrawal","fromAccountValue","toAccountId","TransferDialog","fromAccount","rate","toAccount","fromAccountId","alert","toAccountValue","makeTransfer","_this2","objectWithoutProperties","actionButton","String","accounts_Details","actions","display","marginBottom","justifyContent","term","desc","match","params","hasOtherAccounts","currencyRatesArr","entries","primaryTypographyProps","accounts_EditAccountDialog","accounts_DeleteAccountDialog","accounts_DepositDialog","accounts_WithdrawDialog","accounts_TransferDialog","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","_ref2","_ref3","slicedToArray","scope","error_ErrorPage","ALL_CURRENCIES","DefaultCurrencySelect","mapDispatchToProps","ResetDialog","resetData","root","dialogText","SettingsPage","settings_DefaultCurrencySelect","settings_ResetDialog","AddAccountDialog","MenuItem_default","Boolean","Header","menuAnchorEl","currentTarget","AppBar_default","position","Toolbar_default","grow","link","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","anchorEl","menuItem","flexGrow","history","el","calendar","textAlign","paper","margin","breakpoints","up","BrowserRouter","components_Header","Paper_default","Switch","Route","exact","path","GroupList","HistoryList","render","App","currencies","toConsumableArray","Set","components_RouterMap","window","location","hostname","initialState","allReducers","combineReducers","arguments","replace","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","throttle","setItem","stringify","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45d25b89.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst styles = (theme) => ({\n  linkListItem: {\n    textDecoration: 'none'\n  },\n  listItemButton: {\n    color: theme.palette.action.active,\n    paddingLeft: theme.spacing.unit * 6,\n    paddingRight: theme.spacing.unit * 7,\n  }\n})\n\nconst AccountItem = ({ account, classes }) => (\n  <>\n    <Link to={'/details/' + account.id} className={classes.linkListItem} >\n      <ListItem button classes={{ button: classes.listItemButton }}>\n        <ListItemText primary={account.name} />\n        {Number(account.value).toFixed(2) + ' ' + account.currency}\n      </ListItem>\n    </Link>\n    <Divider />\n  </>\n)\n\nAccountItem.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect()\n)(AccountItem)","// Return a pseudo-random uniqueId for using it for group and account ids\nexport const uniqueId = () => {\n  return '_' + Math.random().toString(36).substr(2, 9)\n}\n\nexport const getTotalBalance = (accounts, rates, defaultCurrency) => {\n  const defaultRates = rates[defaultCurrency] || {}\n\n  return accounts.reduce((res, account) => {\n    if (account.currency === defaultCurrency) {\n      return res + Number(account.value)\n    }\n    return res + Number(account.value) / defaultRates[account.currency]\n  }, 0).toFixed(2) + ' ' + defaultCurrency\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { getTotalBalance } from '../../lib/helpers'\n\nconst TotalBalanceOrProgress = ({ total }) =>  (\n  <>\n    {\n      ~total.indexOf('NaN') ?\n      <CircularProgress size={20} /> :\n      total\n    }\n  </>\n)\n\nTotalBalanceOrProgress.propTypes = {\n  total: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const accounts = ownProps.accounts || state.accounts\n  return {\n    total: getTotalBalance(accounts, state.rates, state.settings.defaultCurrency)\n  }\n}\n\nexport default connect(mapStateToProps)(TotalBalanceOrProgress)","// Account actions\nexport const toggleGroup = (payload) => ({\n  type: 'TOGGLE_GROUP',\n  payload\n})\n\nexport const addAccount = (payload) => ({\n  type: 'ADD_ACCOUNT',\n  payload\n})\n\nexport const editAccount = (payload) => ({\n  type: 'EDIT_ACCOUNT',\n  payload\n})\n\nexport const deleteAccount = (payload) => ({\n  type: 'DELETE_ACCOUNT',\n  payload\n})\n\nexport const makeDeposit = (payload) => ({\n  type: 'MAKE_DEPOSIT',\n  payload\n})\n\nexport const makeWithdrawal = (payload) => ({\n  type: 'MAKE_WITHDRAWAL',\n  payload\n})\n\nexport const makeTransfer = (payload) => ({\n  type: 'MAKE_TRANSFER',\n  payload\n})\n\n// History actions\nexport const addHistory = (payload) => ({\n  type: 'ADD_HISTORY',\n  payload\n})\n\n// Settings actions\nexport const resetData = () => ({\n  type: 'RESET_DATA'\n})\n\nexport const loadDemoData = () => ({\n  type: 'LOAD_DEMO_DATA'\n})\n\nexport const changeDefaultCurrency = (payload) => ({\n  type: 'CHANGE_DEFAULT_CURRENCY',\n  payload\n})\n\n// Rates actions\nexport const fetchRatesSuccess = (payload) => ({\n  type: 'FETCH_RATES_SUCCESS',\n  payload: {\n    [payload.base]: payload.rates\n  }\n})\n\n// Currently there is no reducer for the failure\nexport const fetchRatesFailure = (error) => ({\n  type: 'FETCH_RATES_FAILURE',\n  payload: error\n})\n\nexport const fetchRates = (currency) => {\n  return (dispatch, getState) => fetch('https://api.exchangeratesapi.io/latest?base=' + currency)\n    .then(handleErrors)\n    .then((res) => res.json())\n    .then((json) => {\n      dispatch(fetchRatesSuccess(json))\n    })\n    .catch((error) => dispatch(fetchRatesFailure(error)))\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport AccountItem from './AccountItem'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { toggleGroup } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  total: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing.unit * 2\n  }\n})\n\nclass GroupItem extends React.Component {\n  handleClick = () => {\n    this.props.toggleGroup({\n      groupId: this.props.group.id,\n      collapsed: !this.props.group.collapsed\n    })\n  }\n\n  render() {\n    const { accounts, classes, group } = this.props\n\n    return (\n      <>\n        {\n          accounts.length > 0 &&\n          <React.Fragment key={group.name}>\n            <ListItem button onClick={this.handleClick}>\n              <ListItemText primary={group.name} />\n              <span className={classes.total}>\n                <TotalBalanceOrProgress accounts={accounts} />\n              </span>\n              {group.collapsed ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Divider />\n            <Collapse in={!group.collapsed} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {\n                  accounts.length > 0 && (accounts.map((account) =>\n                    <AccountItem account={account} key={account.id} />\n                  ))\n                }\n              </List>\n            </Collapse>\n            <Divider />\n          </React.Fragment>\n        }\n      </>\n    )\n  }\n}\n\nGroupItem.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  group: PropTypes.object.isRequired,\n  toggleGroup: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((account) => {\n    return account.groupId === ownProps.group.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1)\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { toggleGroup })\n)(GroupItem)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n\n    '&:last-child': {\n      paddingBottom: theme.spacing.unit * 3\n    }\n  }\n})\n\nconst Notice = ({ classes, children, title }) => (\n  <>\n    <Typography variant=\"h5\" className={classes.empty} >\n      {title}\n    </Typography>\n    <Typography variant=\"subtitle1\" className={classes.empty} >\n      {children}\n    </Typography>\n  </>\n)\n\nNotice.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.array.isRequired,\n    PropTypes.string.isRequired,\n  ]),\n  title: PropTypes.string.isRequired\n}\n\nexport default withStyles(styles)(Notice)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport GroupItem from './GroupItem'\nimport Notice from '../common/Notice'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { addHistory, fetchRates, loadDemoData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  total: {\n    lineHeight: 1.5,\n    fontWeight: 'bold',\n    paddingRight: theme.spacing.unit * 7\n  },\n  loadButton: {\n    ...theme.typography.subtitle1,\n    textTransform: 'none',\n    textDecoration: 'underline',\n    padding: 0,\n    minWidth: 'auto',\n    color: '#0000EE',\n\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  }\n})\n\nconst GroupList = ({ addHistory, classes, groups, hasAccounts, loadDemoData, fetchRates }) => {\n  const handleOnClick = (e) => {\n    loadDemoData()\n    fetchRates('USD')\n    addHistory({\n      text: 'Loaded the wallet with the demo data',\n      date: moment().format()\n    })\n  }\n\n  return (\n    <>\n      { hasAccounts ?\n        <List disablePadding={true}>\n          <ListSubheader disableSticky={true}>Accounts</ListSubheader>\n          <Divider />\n          {groups.map((group) =>\n            <GroupItem key={group.id} group={group} />\n          )}\n          <ListItem className={classes.total}>\n            <ListItemText primary=\"Total\" disableTypography={true} />\n            <TotalBalanceOrProgress />\n          </ListItem>\n        </List>\n        :\n        <Notice title=\"Your wallet is empty\">\n          Add accounts from the top menu or\n          &nbsp;\n          <Button color=\"primary\" onClick={handleOnClick} className={classes.loadButton}>\n            load\n          </Button>\n          &nbsp;\n          some dummy data for demo purposes\n        </Notice>\n      }\n    </>\n  )\n}\n\nGroupList.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  loadDemoData: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: state.accounts.length > 0,\n  groups: state.groups\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { addHistory, fetchRates, loadDemoData })\n)(GroupList)","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Notice from '../common/Notice'\n\nconst ErrorPage = () => (\n  <Notice title=\"Page not found\">\n    You can start from <Link to=\"/\">here</Link>\n  </Notice>\n)\n\nexport default ErrorPage\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeDeposit, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass DepositDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    this.setState({ value: Math.max(0, Number(event.target.value)) })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeDeposit({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Deposited ${this.state.value} ${this.props.account.currency} to\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"primary\" onClick={this.handleOpen} >\n          Deposit\n          <Add style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"deposit-dialog-title\"\n        >\n          <DialogTitle id=\"deposit-dialog-title\">Deposit Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Deposit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDepositDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeDeposit: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeDeposit, addHistory }),\n  withStyles(styles)\n)(DepositDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { deleteAccount, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  },\n  buttonLink: {\n    textDecoration: 'none'\n  }\n})\n\nclass DeleteAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false\n    }\n  }\n\n  handleOpen = (event) => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.deleteAccount(this.props.account.id)\n\n    this.props.addHistory({\n      text: `Removed account ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <IconButton className={classes.button} aria-label=\"Delete\" onClick={this.handleOpen} >\n          <DeleteIcon />\n        </IconButton>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Delete Account</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dense}>\n              This action will remove both the account and its\n              balance and cannot be undone.<br/><br/>\n              Are you sure?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className={classes.buttonLink}>\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Delete\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default compose(\n  connect(null, { deleteAccount, addHistory }),\n  withStyles(styles)\n)(DeleteAccountDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport EditIcon from '@material-ui/icons/Edit'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\n\nimport { editAccount, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: props.account.name,\n  groupId: props.account.groupId,\n  nameFieldError: false\n})\n\nclass EditAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      this.props.editAccount({\n        id: this.props.account.id,\n        name: this.state.name,\n        groupId: this.state.groupId\n      })\n\n      const oldGroup = this.props.groups.find((group) => {\n        return group.id === this.props.account.groupId\n      })\n      const newGroup = this.props.groups.find((group) => {\n        return group.id === this.state.groupId\n      })\n\n      this.props.addHistory({\n        text: `Account ${this.props.account.name} (${oldGroup.name}) was changed to \\\n          ${this.state.name} (${newGroup.name}) `,\n        date: moment().format()\n      })\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <IconButton className={classes.button} aria-label=\"Edit\" onClick={this.handleOpen} >\n          <EditIcon />\n        </IconButton>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Edit Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Edit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nEditAccountDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  editAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  groups: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  groups: state.groups\n})\n\nexport default compose(\n  connect(mapStateToProps, { editAccount, addHistory }),\n  withStyles(styles)\n)(EditAccountDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Remove } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeWithdrawal, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass WithdrawDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      value = Math.max(0, Number(value))\n      value = Math.min(value, props.account.value)\n\n      return { value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeWithdrawal({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Withdrew ${this.state.value} ${this.props.account.currency} from\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"secondary\" onClick={this.handleOpen} >\n          Withdraw\n          <Remove style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"withdraw-dialog-title\"\n        >\n          <DialogTitle id=\"withdraw-dialog-title\">Withdraw Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Withdraw\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nWithdrawDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeWithdrawal: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeWithdrawal, addHistory }),\n  withStyles(styles)\n)(WithdrawDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { CompareArrows } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeTransfer, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  actionButton: {\n    color: 'green'\n  }\n})\n\nconst getDefaultState = (props) => ({\n  fromAccountValue: '',\n  toAccountId: props.accounts[0].id\n})\n\nclass TransferDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      if (name === 'fromAccountValue') {\n        value = Math.max(0, Number(value))\n        value = Math.min(value, props.fromAccount.value)\n      }\n\n      return { [name]: value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState((state, props) => {\n      return {\n        open: true,\n        ...getDefaultState(props)\n      }\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.fromAccountValue > 0) {\n      let rate = 1\n      const fromAccount = this.props.fromAccount\n      const toAccount = this.props.accounts.find((a) => a.id === this.state.toAccountId)\n      const payload = {\n        fromAccountId: this.props.fromAccount.id,\n        fromAccountValue: this.state.fromAccountValue,\n        toAccountId: this.state.toAccountId\n      }\n\n      if (fromAccount.currency !== toAccount.currency) {\n        const thisRates = this.props.rates[fromAccount.currency] || {}\n        rate = thisRates[toAccount.currency]\n\n        if (!rate) {\n          alert('No rate for this, please try again. If that doesn\\'t help, refresh the page')\n          this.handleClose()\n          return\n        }\n      }\n\n      payload.toAccountValue = payload.fromAccountValue * rate\n\n      this.props.makeTransfer(payload)\n\n      this.props.addHistory({\n        text: `Transfered ${fromAccount.value} ${fromAccount.currency} from \\\n          ${fromAccount.name} to ${payload.toAccountValue} ${toAccount.currency} in \\\n          ${toAccount.name}`,\n        date: moment().format()\n      })\n    }\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const toAccount = props.accounts.find((a) => a.id === this.state.toAccountId)\n    \n    let rate = 1\n    if (props.fromAccount.currency !== toAccount.currency) {\n      const thisRates = props.rates[props.fromAccount.currency] || {}\n      rate = thisRates[toAccount.currency]\n    }\n\n    return (\n      <>\n        <Button onClick={this.handleOpen} className={classes.actionButton} >\n          Transfer\n          <CompareArrows style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"transfer-dialog-title\"\n        >\n          <DialogTitle id=\"transfer-dialog-title\">Transfer Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              select\n              fullWidth\n              label=\"Transfer To\"\n              value={this.state.toAccountId}\n              onChange={this.handleChange('toAccountId')}\n              SelectProps={{\n                native: true\n              }}\n            >\n              {props.accounts.map((account) => (\n                <option key={account.id} value={account.id}>\n                  {account.name}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.fromAccountValue}\n              onChange={this.handleChange('fromAccountValue')}\n              className={classes.dense}\n            />\n            <DialogContentText className={classes.dense}>\n              The transfer will happen with an exchange rate of: <b>{String(rate)}</b>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} className={classes.actionButton} >\n              Transfer\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nTransferDialog.propTypes = {\n  fromAccount: PropTypes.object.isRequired,\n  accounts: PropTypes.array.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeTransfer: PropTypes.func.isRequired,\n  rates: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((a) => {\n    return a.id !== ownProps.fromAccount.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1),\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { makeTransfer, addHistory }),\n  withStyles(styles)\n)(TransferDialog)","import React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Divider from '@material-ui/core/Divider'\n\nimport ErrorPage from '../error/ErrorPage'\nimport DepositDialog from './DepositDialog'\nimport DeleteAccountDialog from './DeleteAccountDialog'\nimport EditAccountDialog from './EditAccountDialog'\nimport WithdrawDialog from './WithdrawDialog'\nimport TransferDialog from './TransferDialog'\nimport { fetchRates } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  actions: {\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 3,\n    justifyContent: 'space-evenly'\n  },\n  term: {\n    maxWidth: '10em'\n  },\n  desc: {\n    fontWeight: 'bold'\n  }\n})\n\nconst Details = ({ account, classes, fetchRates, hasOtherAccounts, rates }) => {\n  if (!account.id) {\n    return (<ErrorPage />)\n  } else {\n    if (!rates[account.currency]) {\n      fetchRates(account.currency)\n    }\n\n    const currencyRatesArr = Object.entries(rates[account.currency] || {}).sort((a, b) => {\n      return a[0] > b[0] ? 1 : -1\n    })\n\n    return (\n      <List disablePadding={true}>\n        <ListSubheader disableSticky={true}>Details</ListSubheader>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Account\" className={classes.term} />\n          <ListItemText primary={account.name} primaryTypographyProps={{className: classes.desc}} />\n          <EditAccountDialog account={account} />\n          <DeleteAccountDialog account={account} />\n        </ListItem>\n        <Divider/>\n        <ListItem>\n          <ListItemText primary=\"Balance\" className={classes.term} />\n          <ListItemText\n            primary={Number(account.value).toFixed(2) + \" \" + account.currency}\n            primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider/>\n\n        <div className={classes.actions}>\n          <DepositDialog account={account} />\n          <WithdrawDialog account={account} />\n          {\n            hasOtherAccounts &&\n            <TransferDialog fromAccount={account} />\n          }\n        </div>\n        <Divider/>\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>All currency rates against the {account.currency}</TableCell>\n              <TableCell align=\"right\">Rate</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currencyRatesArr.map(([key, value]) => (\n              <TableRow key={key}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {key}\n                </TableCell>\n                <TableCell align=\"right\">{value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </List>\n    )\n  }\n}\n\nDetails.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasOtherAccounts: PropTypes.bool.isRequired,\n  match: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  account: state.accounts.find((a) => {\n    return a.id === ownProps.match.params.accountId\n  }) || {},\n  hasOtherAccounts: state.accounts.length > 1,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { fetchRates }),\n)(Details)","export const ALL_CURRENCIES = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',\n'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JPY', 'KRW',\n'MXN', 'MYR', 'NOK', 'NZD', 'PHP', 'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB',\n'TRY', 'USD', 'ZAR']","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\n\nimport { ALL_CURRENCIES } from '../../lib/constants'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nclass DefaultCurrencySelect extends React.Component {\n  handleChange = (field) => (event) => {\n    const currency = event.target.value\n\n    this.props.fetchRates(currency)\n    this.props.changeDefaultCurrency(currency)\n    this.props.addHistory({\n      text: `Default currency was changed to ${currency}`,\n      date: moment().format()\n    })\n  }\n\n  render() {\n    return (\n      <TextField\n        select\n        value={this.props.defaultCurrency}\n        onChange={this.handleChange()}\n        SelectProps={{\n          native: true\n        }}\n      >\n        {ALL_CURRENCIES.map((currency) => (\n          <option key={currency} value={currency}>\n            {currency}\n          </option>\n        ))}\n      </TextField>\n    )\n  }\n}\n\nDefaultCurrencySelect.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nconst mapDispatchToProps = {\n  addAccount, addHistory, fetchRates, changeDefaultCurrency\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultCurrencySelect)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { resetData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  },\n  buttonLink: {\n    textDecoration: 'none'\n  }\n})\n\nclass ResetDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.resetData()\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <Button onClick={this.handleOpen} color=\"secondary\" >\n          Reset\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"reset-dialog-title\"\n        >\n          <DialogTitle id=\"reset-dialog-title\">Reset All Data</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dialogText}>\n              This action will remove all accounts, rates and history\n              and cannot be undone.<br/><br/>\n              Are you sure?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className={classes.buttonLink} >\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Reset\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  resetData: PropTypes.func.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(null, { resetData })\n)(ResetDialog)","import React from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport DefaultCurrencySelect from './DefaultCurrencySelect'\nimport ResetDialog from './ResetDialog'\n\nconst SettingsPage = () => (\n  <List disablePadding={true}>\n    <ListSubheader disableSticky={true}>Settings</ListSubheader>\n    <Divider />\n    <ListItem>\n      <ListItemText primary=\"Default Currency\" />\n      <DefaultCurrencySelect />\n    </ListItem>\n    <Divider />\n\n    <ListItem>\n      <ListItemText primary=\"Reset All Data\" />\n      <ResetDialog />\n    </ListItem>\n    <Divider />\n  </List>\n)\n\nexport default SettingsPage\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nimport { ALL_CURRENCIES } from '../../lib/constants'\nimport { uniqueId } from '../../lib/helpers'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: '',\n  groupId: props.groups[0].id,\n  currency: props.defaultCurrency,\n  value: '',\n  nameFieldError: false\n})\n\nclass AddAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'value') {\n      value = Math.max(0, Number(event.target.value))\n    }\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      const value = this.state.value || 0\n\n      if (!this.props.rates[this.state.currency]) {\n        this.props.fetchRates(this.state.currency)\n        this.props.fetchRates(this.props.defaultCurrency)\n      }\n\n      this.props.addAccount({\n        id: uniqueId(),\n        name: this.state.name,\n        groupId: this.state.groupId,\n        currency: this.state.currency,\n        value: value\n      })\n\n      this.props.addHistory({\n        text: `Created ${this.state.name} account with ${value} ${this.state.currency} balance`,\n        date: moment().format()\n      })\n\n      // If this is the first account change the default currency to that of the account\n      if (!this.props.hasAccounts && this.props.defaultCurrency !== this.state.currency) {\n        this.props.changeDefaultCurrency(this.state.currency)\n\n        this.props.addHistory({\n          text: `Default currency has been automatically changed to ${this.state.currency}`,\n          date: moment().format()\n        })\n      }\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <MenuItem onClick={this.handleOpen} >\n          {this.props.children}\n        </MenuItem>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                select\n                label=\"Currency\"\n                className={classes.dense}\n                value={this.state.currency}\n                onChange={this.handleChange('currency')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {ALL_CURRENCIES.map(currency => (\n                  <option key={currency} value={currency}>\n                    {currency}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                label=\"Amount (optional)\"\n                placeholder=\"0.00\"\n                type=\"number\"\n                className={classes.dense}\n                value={this.state.value}\n                onChange={this.handleChange('value')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nAddAccountDialog.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  groups: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: Boolean(state.accounts.length),\n  defaultCurrency: state.settings.defaultCurrency,\n  groups: state.groups,\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { addAccount, addHistory, fetchRates, changeDefaultCurrency }),\n  withStyles(styles)\n)(AddAccountDialog)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport AddAccountDialog from './accounts/AddAccountDialog'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  menuItem: {\n    minWidth: '120px'\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { menuAnchorEl: null }\n  }\n\n  handleClick = event => {\n    this.setState({ menuAnchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    // todo: fix this\n    this.setState({ menuAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { menuAnchorEl } = this.state\n\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <Link to=\"/\" className={classes.link}>React Wallet</Link>\n          </Typography>\n          <IconButton\n            aria-owns={menuAnchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem component={AddAccountDialog} onClose={this.handleClose} className={classes.menuItem}>Add Account</MenuItem>\n            <MenuItem component={Link} to=\"/history\" onClick={this.handleClose} className={classes.menuItem}>History</MenuItem>\n            <MenuItem component={Link} to=\"/settings\" onClick={this.handleClose} className={classes.menuItem}>Settings</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Header)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport Notice from '../common/Notice'\n\nconst HistoryList = ({ history }) => (\n  history.length ?\n    <List disablePadding={true}>\n      <ListSubheader disableSticky={true}>History</ListSubheader>\n      <Divider />\n      {history.map((el, key) =>\n        <React.Fragment key={key}>\n          <ListItem>\n            <ListItemText primary={el.text} />\n            <ListItemText primary={moment(el.date).calendar()} style={{textAlign: 'right'}} />\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      )}\n    </List>\n    :\n    <Notice title=\"Your history is empty\">\n      Add some accounts and make some transfers to populate the list\n    </Notice>\n)\n\nHistoryList.propTypes = {\n  history: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history\n})\n\nexport default connect(mapStateToProps)(HistoryList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nimport GroupList from './accounts/GroupList'\nimport Details from './accounts/Details'\nimport ErrorPage from './error/ErrorPage'\nimport SettingsPage from './settings/SettingsPage'\nimport Header from './Header'\nimport HistoryList from './history/HistoryList'\n\nconst styles = (theme) => ({\n  paper: {\n    width: 'auto',\n    minWidth: 400,\n    margin: theme.spacing.unit * 2,\n    [theme.breakpoints.up(680)]: {\n      width: 600,\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  }\n})\n\nconst RouterMap = ({ classes }) => (\n  <Router>\n    <>\n      <Header />\n      <Paper className={classes.paper}>\n        <Switch>\n          <Route exact path=\"/\" component={GroupList} />\n          <Route path=\"/history\" component={HistoryList} />\n          <Route path=\"/settings\" component={SettingsPage} />\n          <Route path='/details/:accountId' render={(props) => {\n            return <Details {...props} />\n          }} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </Paper>\n    </>\n  </Router>\n)\n\nexport default compose(\n  withStyles(styles),\n  connect(),\n)(RouterMap)","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport RouterMap from './RouterMap'\nimport { fetchRates } from '../redux/actions'\n\nclass App extends Component {\n  componentDidMount() {\n    const currencies = this.props.accounts.map((a) => a.currency)\n    if ([...new Set(currencies)] > 1) {\n      this.props.fetchRates(this.props.defaultCurrency)\n    }\n  }\n\n  render() {\n    return (\n      <RouterMap />\n    )\n  }\n}\n\nApp.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  accounts: state.accounts,\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nexport default connect(mapStateToProps, { fetchRates })(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { uniqueId } from '../../lib/helpers'\n\nconst initialState = [\n  'Cash',\n  'Cards & Bank Accounts',\n  'Debts',\n  'Investments',\n  'Others'\n].map((name) => ({\n  id: uniqueId(),\n  name\n}))\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_GROUP': {\n      return state.map((group) => {\n        if (group.id === action.payload.groupId) {\n          return {\n            ...group,\n            collapsed: action.payload.collapsed\n          }\n        }\n        return group\n      })\n    }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  defaultCurrency: 'EUR'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_DEFAULT_CURRENCY': {\n      return {\n        ...state,\n        defaultCurrency: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport accounts from './accounts'\nimport groups from './groups'\nimport history from './history'\nimport rates from './rates'\nimport settings from './settings'\nimport { uniqueId } from '../../lib/helpers'\n\nconst allReducers = combineReducers({\n  accounts,\n  groups,\n  history,\n  rates,\n  settings\n})\n\nexport default (state, action) => {\n  if (action.type === 'RESET_DATA') {\n    // not a state mutation, just reassigning the ref of the local var state\n    state = undefined\n  }\n\n  if (action.type === 'LOAD_DEMO_DATA') {\n    state = {\n      ...state,\n      accounts: [\n        // Cash\n        { name: 'Wallet', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups[0].id },\n        { name: 'Travel Change', id: uniqueId(), currency: 'EUR', value: 95, groupId: state.groups[0].id },\n\n        // Cards & Bank Accounts\n        { name: 'Debit Card', id: uniqueId(), currency: 'USD', value: 8500, groupId: state.groups[1].id },\n        { name: 'TransferWise', id: uniqueId(), currency: 'USD', value: 1500, groupId: state.groups[1].id },\n        { name: 'Canadian Account', id: uniqueId(), currency: 'CAD', value: 500, groupId: state.groups[1].id },\n\n        // Investments\n        { name: 'P2P Lending', id: uniqueId(), currency: 'EUR', value: 5000, groupId: state.groups[3].id },\n        { name: 'Stocks', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups[3].id },\n        { name: 'Crypto funds', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups[3].id },\n\n        // Other Accounts\n        { name: 'PayPal', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups[4].id }\n      ],\n      settings: {\n        defaultCurrency: 'USD'\n      }\n    }\n  }\n\n  return allReducers(state, action)\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ACCOUNT': {\n      return [...state, action.payload]\n    }\n\n    case 'EDIT_ACCOUNT': {\n      return state.map((account) => {\n        if (account.id === action.payload.id) {\n          return {\n            ...account,\n            ...action.payload\n          }\n        }\n        return account\n      })\n    }\n\n    case 'DELETE_ACCOUNT': {\n      return state.filter((account) => account.id !== action.payload)\n    }\n\n    case 'MAKE_DEPOSIT': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.value\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_WITHDRAWAL': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.value)\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_TRANSFER': {\n      return state.map((account) => {\n        if (account.id === action.payload.fromAccountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.fromAccountValue)\n          }\n        }\n  \n        if (account.id === action.payload.toAccountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.toAccountValue\n          }\n        }\n        return account\n      })\n    }\n\n    default:\n      return state\n  }\n}","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_HISTORY': {\n      action.payload.text = action.payload.text.replace(/ {2}/g, '')\n      return [action.payload, ...state]\n    }\n\n    default:\n      return state\n  }\n}","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_RATES_SUCCESS': {\n      return {...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}","import { throttle } from 'lodash'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers/index'\n\nconst initialState = {\n  accounts: [],\n  history: [],\n  rates: {},\n  ...JSON.parse(localStorage.getItem('reactwallet'))\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(throttle(() => {\n  localStorage.setItem('reactwallet', JSON.stringify(store.getState()))\n}, 1000))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}