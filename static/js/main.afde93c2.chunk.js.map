{"version":3,"sources":["components/accounts/AccountItem.js","lib/helpers.js","redux/actions.js","components/accounts/GroupItem.js","components/accounts/GroupList.js","components/accounts/DepositDialog.js","components/accounts/WithdrawDialog.js","components/accounts/TransferDialog.js","components/accounts/Details.js","components/error/ErrorPage.js","components/accounts/AddAccountDialog.js","components/settings/ResetDialog.js","components/Header.js","components/history/HistoryList.js","components/RouterMap.js","components/App.js","serviceWorker.js","redux/reducers/groups.js","redux/reducers/settings.js","redux/reducers/index.js","redux/reducers/accounts.js","redux/reducers/history.js","redux/reducers/rates.js","redux/store.js","index.js"],"names":["compose","withStyles","theme","linkListItem","textDecoration","listItemButton","color","palette","action","active","paddingLeft","spacing","unit","paddingRight","connect","_ref","account","classes","react_default","a","createElement","Fragment","Link","to","id","className","ListItem_default","button","ListItemText_default","primary","name","Number","value","toFixed","currency","Divider_default","uniqueId","Math","random","toString","substr","getTotalBalance","accounts","rates","defaultCurrency","defaultRates","reduce","res","addHistory","payload","type","fetchRates","dispatch","getState","fetch","then","handleErrors","json","Object","defineProperty","base","catch","error","fetchRatesFailure","response","ok","Error","statusText","GroupItem","handleClick","_this","props","toggleGroup","groupId","group","collapsed","_this$props","this","length","key","onClick","total","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","map","accounts_AccountItem","React","Component","fontWeight","marginRight","state","ownProps","filter","sort","b","settings","empty","padding","paddingBottom","textAlign","hasAccounts","groups","accounts_GroupItem","disableTypography","Typography_default","variant","DepositDialog","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","max","target","handleOpen","open","handleClose","handleSubmit","makeDeposit","accountId","text","concat","date","moment","format","Button_default","index_es","style","fontSize","marginLeft","Dialog_default","PaperProps","dialog","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","fullWidth","label","onChange","DialogActions_default","maxWidth","width","WithdrawDialog","min","makeWithdrawal","getDefaultState","fromAccountValue","toAccountId","TransferDialog","fromAccount","objectSpread","rate","toAccount","find","fromAccountId","alert","toAccountValue","makeTransfer","_this2","objectWithoutProperties","actionButton","select","SelectProps","native","dense","DialogContentText_default","String","marginTop","root","margin","actions","display","marginBottom","justifyContent","term","desc","match","params","hasOtherAccounts","currencyRatesArr","entries","primaryTypographyProps","accounts_DepositDialog","accounts_WithdrawDialog","accounts_TransferDialog","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","_ref2","_ref3","slicedToArray","scope","allCurrencies","nameFieldError","AddAccountDialog","field","trim","addAccount","changeDefaultCurrency","MenuItem_default","children","required","placeholder","InputLabelProps","shrink","Boolean","ResetDialog","resetData","dialogText","link","Header","menuAnchorEl","currentTarget","AppBar_default","position","Toolbar_default","grow","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","anchorEl","menuItem","flexGrow","minWidth","history","right","el","calendar","BrowserRouter","components_Header","Switch","Route","exact","path","render","accounts_GroupList","history_HistoryList","accounts_Details","ErrorPage","App","currencies","toConsumableArray","Set","components_RouterMap","window","location","hostname","initialState","allReducers","combineReducers","arguments","replace","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","throttle","setItem","stringify","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.afde93c2.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst styles = (theme) => ({\n  linkListItem: {\n    textDecoration: 'none'\n  },\n  listItemButton: {\n    color: theme.palette.action.active,\n    paddingLeft: theme.spacing.unit * 6,\n    paddingRight: theme.spacing.unit * 7,\n  }\n})\n\nconst AccountItem = ({ account, classes }) => (\n  <>\n    <Link to={'/details/' + account.id} className={classes.linkListItem} >\n      <ListItem button classes={{ button: classes.listItemButton }}>\n        <ListItemText primary={account.name} />\n        {Number(account.value).toFixed(2) + ' ' + account.currency}\n      </ListItem>\n    </Link>\n    <Divider />\n  </>\n)\n\nAccountItem.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect()\n)(AccountItem)","// Return a pseudo-random uniqueId for using it for group and account ids\nexport const uniqueId = () => {\n  return '_' + Math.random().toString(36).substr(2, 9)\n}\n\nexport const getTotalBalance = (accounts, rates, defaultCurrency) => {\n  const defaultRates = rates[defaultCurrency] || {}\n\n  return accounts.reduce((res, account) => {\n    if (account.currency === defaultCurrency) {\n      return res + Number(account.value)\n    }\n    return res + Number(account.value) / defaultRates[account.currency]\n  }, 0).toFixed(2) + ' ' + defaultCurrency\n}","export const addAccount = (payload) => ({\n  type: 'ADD_ACCOUNT',\n  payload\n})\n\nexport const toggleGroup = (payload) => ({\n  type: 'TOGGLE_GROUP',\n  payload\n})\n\nexport const addHistory = (payload) => ({\n  type: 'ADD_HISTORY',\n  payload\n})\n\nexport const resetData = () => ({\n  type: 'RESET_DATA'\n})\n\nexport const changeDefaultCurrency = (payload) => ({\n  type: 'CHANGE_DEFAULT_CURRENCY',\n  payload\n})\n\nexport const makeDeposit = (payload) => ({\n  type: 'MAKE_DEPOSIT',\n  payload\n})\n\nexport const makeWithdrawal = (payload) => ({\n  type: 'MAKE_WITHDRAWAL',\n  payload\n})\n\nexport const makeTransfer = (payload) => ({\n  type: 'MAKE_TRANSFER',\n  payload\n})\n\n// Currently there is no reducer for the failure\nexport const fetchRatesFailure = (error) => ({\n  type: 'FETCH_RATES_FAILURE',\n  payload: error\n})\n\nexport const fetchRatesSuccess = (payload) => ({\n  type: 'FETCH_RATES_SUCCESS',\n  payload: {\n    [payload.base]: payload.rates\n  }\n})\n\nexport const fetchRates = (currency) => {\n  return (dispatch, getState) => fetch('https://api.exchangeratesapi.io/latest?base=' + currency)\n    .then(handleErrors)\n    .then((res) => res.json())\n    .then((json) => {\n      dispatch(fetchRatesSuccess(json))\n    })\n    .catch((error) => dispatch(fetchRatesFailure(error)))\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\n\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport AccountItem from './AccountItem'\nimport { getTotalBalance } from '../../lib/helpers'\nimport { toggleGroup } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  total: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing.unit * 2\n  }\n})\n\nclass GroupItem extends React.Component {\n  handleClick = () => {\n    this.props.toggleGroup({\n      groupId: this.props.group.id,\n      collapsed: !this.props.group.collapsed\n    })\n  }\n\n  render() {\n    const { accounts, rates, classes, defaultCurrency, group } = this.props\n\n    return (\n      <>\n        {\n          accounts.length > 0 &&\n          <React.Fragment key={group.name}>\n            <ListItem button onClick={this.handleClick}>\n              <ListItemText primary={group.name} />\n              <span className={classes.total}>\n                {getTotalBalance(accounts, rates, defaultCurrency)}\n              </span>\n              {group.collapsed ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Divider />\n            <Collapse in={!group.collapsed} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {\n                  accounts.length > 0 && (accounts.map((account) =>\n                    <AccountItem account={account} key={account.id} />\n                  ))\n                }\n              </List>\n            </Collapse>\n            <Divider />\n          </React.Fragment>\n        }\n      </>\n    )\n  }\n}\n\nGroupItem.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  group: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n  toggleGroup: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((account) => {\n    return account.groupId === ownProps.group.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1),\n  defaultCurrency: state.settings.defaultCurrency,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { toggleGroup })\n)(GroupItem)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nimport GroupItem from './GroupItem'\nimport { getTotalBalance } from '../../lib/helpers'\n\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    paddingBottom: 0,\n    textAlign: 'center'\n  },\n  total: {\n    fontWeight: 'bold',\n    paddingRight: theme.spacing.unit * 7\n  }\n})\n\nconst GroupList = ({ classes, groups, hasAccounts, total }) => (\n  <>\n    { hasAccounts ?\n      <List component=\"nav\">\n        {groups.map((group) =>\n          <GroupItem key={group.id} group={group} />\n        )}\n        <ListItem className={classes.total}>\n          <ListItemText primary=\"Total\" disableTypography={true} />\n          {total}\n        </ListItem>\n      </List>\n      :\n      <>\n        <Typography variant=\"h5\" className={classes.empty} >\n          Your wallet is empty.\n        </Typography>\n        <Typography variant=\"h5\" className={classes.empty} >\n          Add some accounts from the top menu.\n        </Typography>\n      </>\n    }\n  </>\n)\n\nGroupList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  groups: PropTypes.array.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  total: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: state.accounts.length > 0,\n  groups: state.groups,\n  total: getTotalBalance(state.accounts, state.rates, state.settings.defaultCurrency)\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps)\n)(GroupList)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeDeposit, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass DepositDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    this.setState({ value: Math.max(0, Number(event.target.value)) })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeDeposit({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Deposited ${this.state.value} ${this.props.account.currency} to\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"primary\" onClick={this.handleOpen} >\n          Deposit\n          <Add style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"deposit-dialog-title\"\n        >\n          <DialogTitle id=\"deposit-dialog-title\">Deposit Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Deposit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDepositDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeDeposit: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeDeposit, addHistory }),\n  withStyles(styles)\n)(DepositDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Remove } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeWithdrawal, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass WithdrawDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      value = Math.max(0, Number(value))\n      value = Math.min(value, props.account.value)\n\n      return { value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeWithdrawal({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Withdrew ${this.state.value} ${this.props.account.currency} from\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"secondary\" onClick={this.handleOpen} >\n          Withdraw\n          <Remove style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"withdraw-dialog-title\"\n        >\n          <DialogTitle id=\"withdraw-dialog-title\">Withdraw Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Withdraw\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nWithdrawDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeWithdrawal: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeWithdrawal, addHistory }),\n  withStyles(styles)\n)(WithdrawDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { CompareArrows } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeTransfer, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  actionButton: {\n    color: 'green'\n  }\n})\n\nconst getDefaultState = (props) => ({\n  fromAccountValue: '',\n  toAccountId: props.accounts[0].id\n})\n\nclass TransferDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      if (name === 'fromAccountValue') {\n        value = Math.max(0, Number(value))\n        value = Math.min(value, props.fromAccount.value)\n      }\n\n      return { [name]: value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState((state, props) => {\n      return {\n        open: true,\n        ...getDefaultState(props)\n      }\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.fromAccountValue > 0) {\n      let rate = 1\n      const fromAccount = this.props.fromAccount\n      const toAccount = this.props.accounts.find((a) => a.id === this.state.toAccountId)\n      const payload = {\n        fromAccountId: this.props.fromAccount.id,\n        fromAccountValue: this.state.fromAccountValue,\n        toAccountId: this.state.toAccountId\n      }\n\n      if (fromAccount.currency !== toAccount.currency) {\n        const thisRates = this.props.rates[fromAccount.currency] || {}\n        rate = thisRates[toAccount.currency]\n\n        if (!rate) {\n          alert('No rate for this, please try again. If that doesn\\'t help, refresh the page')\n          this.handleClose()\n          return\n        }\n      }\n\n      payload.toAccountValue = payload.fromAccountValue * rate\n\n      this.props.makeTransfer(payload)\n\n      this.props.addHistory({\n        text: `Transfered ${fromAccount.value} ${fromAccount.currency} from \\\n          ${fromAccount.name} to ${payload.toAccountValue} ${toAccount.currency} in \\\n          ${toAccount.name}`,\n        date: moment().format()\n      })\n    }\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const toAccount = props.accounts.find((a) => a.id === this.state.toAccountId)\n    \n    let rate = 1\n    if (props.fromAccount.currency !== toAccount.currency) {\n      const thisRates = props.rates[props.fromAccount.currency] || {}\n      rate = thisRates[toAccount.currency]\n    }\n\n    return (\n      <>\n        <Button onClick={this.handleOpen} className={classes.actionButton} >\n          Transfer\n          <CompareArrows style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"transfer-dialog-title\"\n        >\n          <DialogTitle id=\"transfer-dialog-title\">Transfer Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              select\n              fullWidth\n              label=\"Transfer To\"\n              value={this.state.toAccountId}\n              onChange={this.handleChange('toAccountId')}\n              SelectProps={{\n                native: true\n              }}\n            >\n              {props.accounts.map((account) => (\n                <option key={account.id} value={account.id}>\n                  {account.name}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.fromAccountValue}\n              onChange={this.handleChange('fromAccountValue')}\n              className={classes.dense}\n            />\n            <DialogContentText className={classes.dense}>\n              The transfer will happen with an exchange rate of: <b>{String(rate)}</b>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} className={classes.actionButton} >\n              Transfer\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nTransferDialog.propTypes = {\n  fromAccount: PropTypes.object.isRequired,\n  accounts: PropTypes.array.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeTransfer: PropTypes.func.isRequired,\n  rates: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((a) => {\n    return a.id !== ownProps.fromAccount.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1),\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { makeTransfer, addHistory }),\n  withStyles(styles)\n)(TransferDialog)","import React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Divider from '@material-ui/core/Divider'\n\nimport DepositDialog from './DepositDialog'\nimport WithdrawDialog from './WithdrawDialog'\nimport TransferDialog from './TransferDialog'\n\nconst styles = (theme) => ({\n  root: {\n    margin: theme.spacing.unit * 3\n  },\n  actions: {\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 3,\n    justifyContent: 'space-evenly'\n  },\n  term: {\n    maxWidth: '10em'\n  },\n  desc: {\n    fontWeight: 'bold'\n  }\n})\n\nconst Details = ({ account, classes, hasOtherAccounts, rates }) => {\n  const currencyRatesArr = Object.entries(rates[account.currency] || {}).sort((a, b) => {\n    return a[0] > b[0] ? 1 : -1\n  })\n\n  return (\n    <div className={classes.root}>\n      <ListItem>\n        <ListItemText primary=\"Account\" className={classes.term} />\n        <ListItemText primary={account.name} primaryTypographyProps={{className: classes.desc}} />\n      </ListItem>\n      <Divider/>\n      <ListItem>\n        <ListItemText primary=\"Balance\" className={classes.term} />\n        <ListItemText\n          primary={Number(account.value).toFixed(2) + \" \" + account.currency}\n          primaryTypographyProps={{className: classes.desc}} />\n      </ListItem>\n      <Divider/>\n\n      <div className={classes.actions}>\n        <DepositDialog account={account} />\n        <WithdrawDialog account={account} />\n        {\n          hasOtherAccounts &&\n          <TransferDialog fromAccount={account} />\n        }\n      </div>\n      <Divider/>\n\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>All currency rates against the {account.currency}</TableCell>\n            <TableCell align=\"right\">Rate</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {currencyRatesArr.map(([key, value]) => (\n            <TableRow key={key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {key}\n              </TableCell>\n              <TableCell align=\"right\">{value}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\nDetails.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  hasOtherAccounts: PropTypes.bool.isRequired,\n  match: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  account: state.accounts.find((a) => a.id === ownProps.match.params.accountId),\n  hasOtherAccounts: state.accounts.length > 1,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, {  }),\n)(Details)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    textAlign: 'center'\n  }\n})\n\nconst ErrorPage = ({ classes }) => (\n  <Typography variant=\"h5\" className={classes.empty} >\n    Page not found. You can start from <Link to=\"/\">here</Link>.\n  </Typography>\n)\n\nErrorPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ErrorPage)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nimport { uniqueId } from '../../lib/helpers'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nconst allCurrencies = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',\n'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JPY', 'KRW',\n'MXN', 'MYR', 'NOK', 'NZD', 'PHP', 'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB',\n'TRY', 'USD', 'ZAR']\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: '',\n  groupId: props.groups[0].id,\n  currency: props.defaultCurrency,\n  value: '',\n  nameFieldError: false\n})\n\nclass AddAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'value') {\n      value = Math.max(0, Number(event.target.value))\n    }\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      const value = this.state.value || 0\n\n      if (!this.props.rates[this.state.currency]) {\n        this.props.fetchRates(this.state.currency)\n      }\n\n      this.props.addAccount({\n        id: uniqueId(),\n        name: this.state.name,\n        groupId: this.state.groupId,\n        currency: this.state.currency,\n        value: value\n      })\n\n      this.props.addHistory({\n        text: `Created ${this.state.name} account with ${value} ${this.state.currency} balance`,\n        date: moment().format()\n      })\n\n      // If this is the first account change the default currency to that of the account\n      if (!this.props.hasAccounts && this.props.defaultCurrency !== this.state.currency) {\n        this.props.changeDefaultCurrency(this.state.currency)\n\n        this.props.addHistory({\n          text: `Default currency has been automatically changed to ${this.state.currency}`,\n          date: moment().format()\n        })\n      }\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <MenuItem onClick={this.handleOpen} >\n          {this.props.children}\n        </MenuItem>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                select\n                label=\"Currency\"\n                className={classes.dense}\n                value={this.state.currency}\n                onChange={this.handleChange('currency')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {allCurrencies.map(currency => (\n                  <option key={currency} value={currency}>\n                    {currency}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                label=\"Amount (optional)\"\n                placeholder=\"0.00\"\n                type=\"number\"\n                className={classes.dense}\n                value={this.state.value}\n                onChange={this.handleChange('value')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nAddAccountDialog.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  groups: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: Boolean(state.accounts.length),\n  defaultCurrency: state.settings.defaultCurrency,\n  groups: state.groups,\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { addAccount, addHistory, fetchRates, changeDefaultCurrency }),\n  withStyles(styles)\n)(AddAccountDialog)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { resetData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  },\n  link: {\n    textDecoration: 'none'\n  }\n})\n\nclass ResetDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    this.props.resetData()\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <MenuItem onClick={this.handleOpen} >\n          Reset\n        </MenuItem>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"reset-dialog-title\"\n        >\n          <DialogTitle id=\"reset-dialog-title\">Reset Wallet</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dialogText}>\n              Are you sure you want to reset the wallet data? This will remove all accounts, rates and history.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className={classes.link} >\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Reset\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  resetData: PropTypes.func.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(null, { resetData })\n)(ResetDialog)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport AddAccountDialog from './accounts/AddAccountDialog'\nimport ResetDialog from './settings/ResetDialog'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  menuItem: {\n    minWidth: '120px'\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { menuAnchorEl: null }\n  }\n\n  handleClick = event => {\n    this.setState({ menuAnchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    // todo: fix this\n    this.setState({ menuAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { menuAnchorEl } = this.state\n\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <Link to=\"/\" className={classes.link}>React Wallet</Link>\n          </Typography>\n          <IconButton\n            aria-owns={menuAnchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem component={AddAccountDialog} onClose={this.handleClose} className={classes.menuItem}>Add Account</MenuItem>\n            <MenuItem component={Link} to=\"/history\" onClick={this.handleClose} className={classes.menuItem}>History</MenuItem>\n            <MenuItem component={ResetDialog} onClose={this.handleClose} className={classes.menuItem}>Reset Data</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Header)","import moment from 'moment'\nimport React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    paddingBottom: 0,\n    textAlign: 'center'\n  },\n  right: {\n    textAlign: 'right'\n  }\n})\n\nconst HistoryList = ({ classes, history }) => (\n  history.length ?\n    <List component=\"nav\">\n      {history.map((el, key) =>\n        <React.Fragment key={key}>\n          <ListItem>\n            <ListItemText primary={el.text} />\n            <ListItemText primary={moment(el.date).calendar()} className={classes.right} />\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      )}\n    </List>\n    :\n    <>\n      <Typography variant=\"h5\" className={classes.empty} >\n        Your history is empty.\n      </Typography>\n      <Typography variant=\"h5\" className={classes.empty} >\n        Add some accounts and make some transfers to populate the list.\n      </Typography>\n    </>\n)\n\nHistoryList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(HistoryList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport GroupList from './accounts/GroupList'\nimport Details from './accounts/Details'\nimport ErrorPage from './error/ErrorPage'\nimport Header from './Header'\nimport HistoryList from './history/HistoryList'\n\nconst RouterMap = () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route exact path='/' render={() => <GroupList />} />\n        <Route path='/history' render={() => <HistoryList />} />\n        <Route path='/details/:accountId' render={(props) => <Details {...props} />} />\n        <Route component={ErrorPage} />\n      </Switch>\n    </>\n  </Router>\n)\n\nexport default connect()(RouterMap)","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport RouterMap from './RouterMap'\nimport { fetchRates } from '../redux/actions'\n\nclass App extends Component {\n  componentDidMount() {\n    const currencies = this.props.accounts.map((a) => a.currency)\n    if ([...new Set(currencies)] > 1) {\n      this.props.fetchRates(this.props.defaultCurrency)\n    }\n  }\n\n  render() {\n    return (\n      <RouterMap />\n    )\n  }\n}\n\nApp.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  accounts: state.accounts,\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nexport default connect(mapStateToProps, { fetchRates })(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { uniqueId } from '../../lib/helpers'\n\nconst initialState = [\n  'Cash',\n  'Bank Accounts',\n  'Cards',\n  'Credit Cards',\n  'Investments',\n  'Others'\n].map((name) => ({\n  id: uniqueId(),\n  name\n}))\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_GROUP': {\n      return state.map((group) => {\n        if (group.id === action.payload.groupId) {\n          return {\n            ...group,\n            collapsed: action.payload.collapsed\n          }\n        }\n        return group\n      })\n    }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  defaultCurrency: 'EUR'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_DEFAULT_CURRENCY': {\n      return {\n        ...state,\n        defaultCurrency: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport accounts from './accounts'\nimport groups from './groups'\nimport history from './history'\nimport rates from './rates'\nimport settings from './settings'\n\nconst allReducers = combineReducers({\n  accounts,\n  groups,\n  history,\n  rates,\n  settings\n})\n\nexport default (state, action) => {\n  if (action.type === 'RESET_DATA') {\n    // not a state mutation, just reassigning the ref of the local var state\n    state = undefined\n  }\n\n  return allReducers(state, action)\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ACCOUNT': {\n      return [...state, action.payload]\n    }\n\n    case 'MAKE_DEPOSIT': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.value\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_WITHDRAWAL': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.value)\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_TRANSFER': {\n      return state.map((account) => {\n        if (account.id === action.payload.fromAccountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.fromAccountValue)\n          }\n        }\n  \n        if (account.id === action.payload.toAccountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.toAccountValue\n          }\n        }\n        return account\n      })\n    }\n\n    default:\n      return state\n  }\n}","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_HISTORY': {\n      action.payload.text = action.payload.text.replace(/ {2}/g, '')\n      return [action.payload, ...state]\n    }\n\n    default:\n      return state\n  }\n}","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_RATES_SUCCESS': {\n      return {...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}","import { throttle } from 'lodash'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers/index'\n\nconst initialState = {\n  accounts: [],\n  history: [],\n  rates: {},\n  ...JSON.parse(localStorage.getItem('reactwallet'))\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(throttle(() => {\n  localStorage.setItem('reactwallet', JSON.stringify(store.getState()))\n}, 1000))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}