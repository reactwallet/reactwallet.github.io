{"version":3,"sources":["components/accounts/AccountItem.js","lib/helpers.js","components/common/TotalBalanceOrProgress.js","redux/actions.js","components/accounts/GroupItem.js","components/accounts/GroupList.js","components/accounts/DepositDialog.js","components/accounts/WithdrawDialog.js","components/accounts/TransferDialog.js","components/accounts/Details.js","components/error/ErrorPage.js","components/accounts/AddAccountDialog.js","components/settings/ResetDialog.js","components/Header.js","components/history/HistoryList.js","components/RouterMap.js","components/App.js","serviceWorker.js","redux/reducers/groups.js","redux/reducers/settings.js","redux/reducers/index.js","redux/reducers/accounts.js","redux/reducers/history.js","redux/reducers/rates.js","redux/store.js","index.js"],"names":["compose","withStyles","theme","linkListItem","textDecoration","listItemButton","color","palette","action","active","paddingLeft","spacing","unit","paddingRight","connect","_ref","account","classes","react_default","a","createElement","Fragment","Link","to","id","className","ListItem_default","button","ListItemText_default","primary","name","Number","value","toFixed","currency","Divider_default","uniqueId","Math","random","toString","substr","getTotalBalance","accounts","rates","defaultCurrency","defaultRates","reduce","res","state","ownProps","total","settings","indexOf","CircularProgress_default","size","addHistory","payload","type","fetchRates","dispatch","getState","fetch","then","handleErrors","json","Object","defineProperty","base","catch","error","fetchRatesFailure","response","ok","Error","statusText","GroupItem","handleClick","_this","props","toggleGroup","groupId","group","collapsed","_this$props","this","length","key","onClick","common_TotalBalanceOrProgress","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","map","accounts_AccountItem","React","Component","fontWeight","marginRight","filter","sort","b","empty","padding","paddingBottom","textAlign","loadButton","objectSpread","typography","subtitle1","textTransform","minWidth","&:hover","backgroundColor","hasAccounts","groups","loadDemoData","accounts_GroupItem","disableTypography","Typography_default","variant","Button_default","e","text","date","moment","format","DepositDialog","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","max","target","handleOpen","open","handleClose","handleSubmit","makeDeposit","accountId","concat","index_es","style","fontSize","marginLeft","Dialog_default","PaperProps","dialog","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","fullWidth","label","onChange","DialogActions_default","maxWidth","width","WithdrawDialog","min","makeWithdrawal","getDefaultState","fromAccountValue","toAccountId","TransferDialog","fromAccount","rate","toAccount","find","fromAccountId","alert","toAccountValue","makeTransfer","_this2","objectWithoutProperties","actionButton","select","SelectProps","native","dense","DialogContentText_default","String","marginTop","root","margin","actions","display","marginBottom","justifyContent","term","desc","match","params","hasOtherAccounts","currencyRatesArr","entries","primaryTypographyProps","accounts_DepositDialog","accounts_WithdrawDialog","accounts_TransferDialog","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","_ref2","_ref3","slicedToArray","scope","paddingTop","allCurrencies","nameFieldError","AddAccountDialog","field","trim","addAccount","changeDefaultCurrency","MenuItem_default","children","required","placeholder","InputLabelProps","shrink","Boolean","ResetDialog","resetData","dialogText","link","Header","menuAnchorEl","currentTarget","AppBar_default","position","Toolbar_default","grow","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","anchorEl","menuItem","flexGrow","history","right","el","calendar","BrowserRouter","components_Header","Switch","Route","exact","path","render","accounts_GroupList","history_HistoryList","accounts_Details","ErrorPage","App","currencies","toConsumableArray","Set","components_RouterMap","window","location","hostname","initialState","allReducers","combineReducers","arguments","replace","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","throttle","setItem","stringify","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d98f0827.chunk.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst styles = (theme) => ({\n  linkListItem: {\n    textDecoration: 'none'\n  },\n  listItemButton: {\n    color: theme.palette.action.active,\n    paddingLeft: theme.spacing.unit * 6,\n    paddingRight: theme.spacing.unit * 7,\n  }\n})\n\nconst AccountItem = ({ account, classes }) => (\n  <>\n    <Link to={'/details/' + account.id} className={classes.linkListItem} >\n      <ListItem button classes={{ button: classes.listItemButton }}>\n        <ListItemText primary={account.name} />\n        {Number(account.value).toFixed(2) + ' ' + account.currency}\n      </ListItem>\n    </Link>\n    <Divider />\n  </>\n)\n\nAccountItem.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect()\n)(AccountItem)","// Return a pseudo-random uniqueId for using it for group and account ids\nexport const uniqueId = () => {\n  return '_' + Math.random().toString(36).substr(2, 9)\n}\n\nexport const getTotalBalance = (accounts, rates, defaultCurrency) => {\n  const defaultRates = rates[defaultCurrency] || {}\n\n  return accounts.reduce((res, account) => {\n    if (account.currency === defaultCurrency) {\n      return res + Number(account.value)\n    }\n    return res + Number(account.value) / defaultRates[account.currency]\n  }, 0).toFixed(2) + ' ' + defaultCurrency\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { getTotalBalance } from '../../lib/helpers'\n\nconst TotalBalanceOrProgress = ({ total }) =>  (\n  <>\n    {\n      ~total.indexOf('NaN') ?\n      <CircularProgress size={20} /> :\n      total\n    }\n  </>\n)\n\nTotalBalanceOrProgress.propTypes = {\n  total: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const accounts = ownProps.accounts || state.accounts\n  return {\n    total: getTotalBalance(accounts, state.rates, state.settings.defaultCurrency)\n  }\n}\n\nexport default connect(mapStateToProps)(TotalBalanceOrProgress)","export const addAccount = (payload) => ({\n  type: 'ADD_ACCOUNT',\n  payload\n})\n\nexport const toggleGroup = (payload) => ({\n  type: 'TOGGLE_GROUP',\n  payload\n})\n\nexport const addHistory = (payload) => ({\n  type: 'ADD_HISTORY',\n  payload\n})\n\nexport const resetData = () => ({\n  type: 'RESET_DATA'\n})\n\nexport const loadDemoData = () => ({\n  type: 'LOAD_DEMO_DATA'\n})\n\nexport const changeDefaultCurrency = (payload) => ({\n  type: 'CHANGE_DEFAULT_CURRENCY',\n  payload\n})\n\nexport const makeDeposit = (payload) => ({\n  type: 'MAKE_DEPOSIT',\n  payload\n})\n\nexport const makeWithdrawal = (payload) => ({\n  type: 'MAKE_WITHDRAWAL',\n  payload\n})\n\nexport const makeTransfer = (payload) => ({\n  type: 'MAKE_TRANSFER',\n  payload\n})\n\n// Currently there is no reducer for the failure\nexport const fetchRatesFailure = (error) => ({\n  type: 'FETCH_RATES_FAILURE',\n  payload: error\n})\n\nexport const fetchRatesSuccess = (payload) => ({\n  type: 'FETCH_RATES_SUCCESS',\n  payload: {\n    [payload.base]: payload.rates\n  }\n})\n\nexport const fetchRates = (currency) => {\n  return (dispatch, getState) => fetch('https://api.exchangeratesapi.io/latest?base=' + currency)\n    .then(handleErrors)\n    .then((res) => res.json())\n    .then((json) => {\n      dispatch(fetchRatesSuccess(json))\n    })\n    .catch((error) => dispatch(fetchRatesFailure(error)))\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport AccountItem from './AccountItem'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { toggleGroup } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  total: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing.unit * 2\n  }\n})\n\nclass GroupItem extends React.Component {\n  handleClick = () => {\n    this.props.toggleGroup({\n      groupId: this.props.group.id,\n      collapsed: !this.props.group.collapsed\n    })\n  }\n\n  render() {\n    const { accounts, classes, group } = this.props\n\n    return (\n      <>\n        {\n          accounts.length > 0 &&\n          <React.Fragment key={group.name}>\n            <ListItem button onClick={this.handleClick}>\n              <ListItemText primary={group.name} />\n              <span className={classes.total}>\n                <TotalBalanceOrProgress accounts={accounts} />\n              </span>\n              {group.collapsed ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Divider />\n            <Collapse in={!group.collapsed} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {\n                  accounts.length > 0 && (accounts.map((account) =>\n                    <AccountItem account={account} key={account.id} />\n                  ))\n                }\n              </List>\n            </Collapse>\n            <Divider />\n          </React.Fragment>\n        }\n      </>\n    )\n  }\n}\n\nGroupItem.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  group: PropTypes.object.isRequired,\n  toggleGroup: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((account) => {\n    return account.groupId === ownProps.group.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1)\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { toggleGroup })\n)(GroupItem)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nimport GroupItem from './GroupItem'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { addHistory, fetchRates, loadDemoData } from '../../redux/actions'\n\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    paddingBottom: 0,\n    textAlign: 'center'\n  },\n  total: {\n    fontWeight: 'bold',\n    paddingRight: theme.spacing.unit * 7\n  },\n  loadButton: {\n    ...theme.typography.subtitle1,\n    textTransform: 'none',\n    textDecoration: 'underline',\n    padding: 0,\n    minWidth: 'auto',\n    color: '#0000EE',\n\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  }\n})\n\nconst GroupList = ({ addHistory, classes, groups, hasAccounts, loadDemoData, fetchRates }) => {\n  const handleOnClick = (e) => {\n    loadDemoData()\n    fetchRates('USD')\n    addHistory({\n      text: 'Loaded the wallet with the demo data',\n      date: moment().format()\n    })\n  }\n\n  return (\n    <>\n      { hasAccounts ?\n        <List component=\"nav\">\n          {groups.map((group) =>\n            <GroupItem key={group.id} group={group} />\n          )}\n          <ListItem className={classes.total}>\n            <ListItemText primary=\"Total\" disableTypography={true} />\n            <TotalBalanceOrProgress />\n          </ListItem>\n        </List>\n        :\n        <>\n          <Typography variant=\"h5\" className={classes.empty} >\n            Your wallet is empty\n          </Typography>\n          <Typography variant=\"subtitle1\" className={classes.empty} >\n            Add accounts from the top menu or<br/>\n            <Button color=\"primary\" onClick={handleOnClick} className={classes.loadButton}>\n              load\n            </Button>\n            &nbsp;\n            some dummy data for demo purposes\n          </Typography>\n        </>\n      }\n    </>\n  )\n}\n\nGroupList.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  loadDemoData: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: state.accounts.length > 0,\n  groups: state.groups\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { addHistory, fetchRates, loadDemoData })\n)(GroupList)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeDeposit, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass DepositDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    this.setState({ value: Math.max(0, Number(event.target.value)) })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeDeposit({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Deposited ${this.state.value} ${this.props.account.currency} to\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"primary\" onClick={this.handleOpen} >\n          Deposit\n          <Add style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"deposit-dialog-title\"\n        >\n          <DialogTitle id=\"deposit-dialog-title\">Deposit Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Deposit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDepositDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeDeposit: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeDeposit, addHistory }),\n  withStyles(styles)\n)(DepositDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Remove } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeWithdrawal, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass WithdrawDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      value = Math.max(0, Number(value))\n      value = Math.min(value, props.account.value)\n\n      return { value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeWithdrawal({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Withdrew ${this.state.value} ${this.props.account.currency} from\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"secondary\" onClick={this.handleOpen} >\n          Withdraw\n          <Remove style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"withdraw-dialog-title\"\n        >\n          <DialogTitle id=\"withdraw-dialog-title\">Withdraw Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Withdraw\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nWithdrawDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeWithdrawal: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeWithdrawal, addHistory }),\n  withStyles(styles)\n)(WithdrawDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { CompareArrows } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeTransfer, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  actionButton: {\n    color: 'green'\n  }\n})\n\nconst getDefaultState = (props) => ({\n  fromAccountValue: '',\n  toAccountId: props.accounts[0].id\n})\n\nclass TransferDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      if (name === 'fromAccountValue') {\n        value = Math.max(0, Number(value))\n        value = Math.min(value, props.fromAccount.value)\n      }\n\n      return { [name]: value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState((state, props) => {\n      return {\n        open: true,\n        ...getDefaultState(props)\n      }\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.fromAccountValue > 0) {\n      let rate = 1\n      const fromAccount = this.props.fromAccount\n      const toAccount = this.props.accounts.find((a) => a.id === this.state.toAccountId)\n      const payload = {\n        fromAccountId: this.props.fromAccount.id,\n        fromAccountValue: this.state.fromAccountValue,\n        toAccountId: this.state.toAccountId\n      }\n\n      if (fromAccount.currency !== toAccount.currency) {\n        const thisRates = this.props.rates[fromAccount.currency] || {}\n        rate = thisRates[toAccount.currency]\n\n        if (!rate) {\n          alert('No rate for this, please try again. If that doesn\\'t help, refresh the page')\n          this.handleClose()\n          return\n        }\n      }\n\n      payload.toAccountValue = payload.fromAccountValue * rate\n\n      this.props.makeTransfer(payload)\n\n      this.props.addHistory({\n        text: `Transfered ${fromAccount.value} ${fromAccount.currency} from \\\n          ${fromAccount.name} to ${payload.toAccountValue} ${toAccount.currency} in \\\n          ${toAccount.name}`,\n        date: moment().format()\n      })\n    }\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const toAccount = props.accounts.find((a) => a.id === this.state.toAccountId)\n    \n    let rate = 1\n    if (props.fromAccount.currency !== toAccount.currency) {\n      const thisRates = props.rates[props.fromAccount.currency] || {}\n      rate = thisRates[toAccount.currency]\n    }\n\n    return (\n      <>\n        <Button onClick={this.handleOpen} className={classes.actionButton} >\n          Transfer\n          <CompareArrows style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"transfer-dialog-title\"\n        >\n          <DialogTitle id=\"transfer-dialog-title\">Transfer Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              select\n              fullWidth\n              label=\"Transfer To\"\n              value={this.state.toAccountId}\n              onChange={this.handleChange('toAccountId')}\n              SelectProps={{\n                native: true\n              }}\n            >\n              {props.accounts.map((account) => (\n                <option key={account.id} value={account.id}>\n                  {account.name}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.fromAccountValue}\n              onChange={this.handleChange('fromAccountValue')}\n              className={classes.dense}\n            />\n            <DialogContentText className={classes.dense}>\n              The transfer will happen with an exchange rate of: <b>{String(rate)}</b>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} className={classes.actionButton} >\n              Transfer\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nTransferDialog.propTypes = {\n  fromAccount: PropTypes.object.isRequired,\n  accounts: PropTypes.array.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeTransfer: PropTypes.func.isRequired,\n  rates: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((a) => {\n    return a.id !== ownProps.fromAccount.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1),\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { makeTransfer, addHistory }),\n  withStyles(styles)\n)(TransferDialog)","import React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Divider from '@material-ui/core/Divider'\n\nimport DepositDialog from './DepositDialog'\nimport WithdrawDialog from './WithdrawDialog'\nimport TransferDialog from './TransferDialog'\nimport { fetchRates } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  root: {\n    margin: theme.spacing.unit * 3\n  },\n  actions: {\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 3,\n    justifyContent: 'space-evenly'\n  },\n  term: {\n    maxWidth: '10em'\n  },\n  desc: {\n    fontWeight: 'bold'\n  }\n})\n\nconst Details = ({ account, classes, fetchRates, hasOtherAccounts, rates }) => {\n  if (!rates[account.currency]) {\n    fetchRates(account.currency)\n  }\n\n  const currencyRatesArr = Object.entries(rates[account.currency] || {}).sort((a, b) => {\n    return a[0] > b[0] ? 1 : -1\n  })\n\n  return (\n    <div className={classes.root}>\n      <ListItem>\n        <ListItemText primary=\"Account\" className={classes.term} />\n        <ListItemText primary={account.name} primaryTypographyProps={{className: classes.desc}} />\n      </ListItem>\n      <Divider/>\n      <ListItem>\n        <ListItemText primary=\"Balance\" className={classes.term} />\n        <ListItemText\n          primary={Number(account.value).toFixed(2) + \" \" + account.currency}\n          primaryTypographyProps={{className: classes.desc}} />\n      </ListItem>\n      <Divider/>\n\n      <div className={classes.actions}>\n        <DepositDialog account={account} />\n        <WithdrawDialog account={account} />\n        {\n          hasOtherAccounts &&\n          <TransferDialog fromAccount={account} />\n        }\n      </div>\n      <Divider/>\n\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>All currency rates against the {account.currency}</TableCell>\n            <TableCell align=\"right\">Rate</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {currencyRatesArr.map(([key, value]) => (\n            <TableRow key={key}>\n              <TableCell component=\"th\" scope=\"row\">\n                {key}\n              </TableCell>\n              <TableCell align=\"right\">{value}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\nDetails.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasOtherAccounts: PropTypes.bool.isRequired,\n  match: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  account: state.accounts.find((a) => a.id === ownProps.match.params.accountId),\n  hasOtherAccounts: state.accounts.length > 1,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { fetchRates }),\n)(Details)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    paddingTop: theme.spacing.unit * 3,\n    textAlign: 'center'\n  }\n})\n\nconst ErrorPage = ({ classes }) => (\n  <>\n    <Typography variant=\"h5\" className={classes.empty} >\n      Page not found\n    </Typography>\n    <Typography variant=\"subtitle1\" className={classes.empty} >\n      You can start from <Link to=\"/\">here</Link>\n    </Typography>\n  </>\n)\n\nErrorPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(ErrorPage)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\n\nimport { uniqueId } from '../../lib/helpers'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nconst allCurrencies = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',\n'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JPY', 'KRW',\n'MXN', 'MYR', 'NOK', 'NZD', 'PHP', 'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB',\n'TRY', 'USD', 'ZAR']\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: '',\n  groupId: props.groups[0].id,\n  currency: props.defaultCurrency,\n  value: '',\n  nameFieldError: false\n})\n\nclass AddAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'value') {\n      value = Math.max(0, Number(event.target.value))\n    }\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      const value = this.state.value || 0\n\n      if (!this.props.rates[this.state.currency]) {\n        this.props.fetchRates(this.state.currency)\n        this.props.fetchRates(this.props.defaultCurrency)\n      }\n\n      this.props.addAccount({\n        id: uniqueId(),\n        name: this.state.name,\n        groupId: this.state.groupId,\n        currency: this.state.currency,\n        value: value\n      })\n\n      this.props.addHistory({\n        text: `Created ${this.state.name} account with ${value} ${this.state.currency} balance`,\n        date: moment().format()\n      })\n\n      // If this is the first account change the default currency to that of the account\n      if (!this.props.hasAccounts && this.props.defaultCurrency !== this.state.currency) {\n        this.props.changeDefaultCurrency(this.state.currency)\n\n        this.props.addHistory({\n          text: `Default currency has been automatically changed to ${this.state.currency}`,\n          date: moment().format()\n        })\n      }\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <MenuItem onClick={this.handleOpen} >\n          {this.props.children}\n        </MenuItem>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                select\n                label=\"Currency\"\n                className={classes.dense}\n                value={this.state.currency}\n                onChange={this.handleChange('currency')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {allCurrencies.map(currency => (\n                  <option key={currency} value={currency}>\n                    {currency}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                label=\"Amount (optional)\"\n                placeholder=\"0.00\"\n                type=\"number\"\n                className={classes.dense}\n                value={this.state.value}\n                onChange={this.handleChange('value')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nAddAccountDialog.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  groups: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: Boolean(state.accounts.length),\n  defaultCurrency: state.settings.defaultCurrency,\n  groups: state.groups,\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { addAccount, addHistory, fetchRates, changeDefaultCurrency }),\n  withStyles(styles)\n)(AddAccountDialog)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { resetData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  },\n  link: {\n    textDecoration: 'none'\n  }\n})\n\nclass ResetDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n    this.props.onClose()\n  }\n\n  handleSubmit = () => {\n    this.props.resetData()\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <MenuItem onClick={this.handleOpen} >\n          Reset\n        </MenuItem>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"reset-dialog-title\"\n        >\n          <DialogTitle id=\"reset-dialog-title\">Reset Wallet</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dialogText}>\n              Are you sure you want to reset the wallet data? This will remove all accounts, rates and history.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className={classes.link} >\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Reset\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func.isRequired,\n  resetData: PropTypes.func.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(null, { resetData })\n)(ResetDialog)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nimport AddAccountDialog from './accounts/AddAccountDialog'\nimport ResetDialog from './settings/ResetDialog'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  menuItem: {\n    minWidth: '120px'\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { menuAnchorEl: null }\n  }\n\n  handleClick = event => {\n    this.setState({ menuAnchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    // todo: fix this\n    this.setState({ menuAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { menuAnchorEl } = this.state\n\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <Link to=\"/\" className={classes.link}>React Wallet</Link>\n          </Typography>\n          <IconButton\n            aria-owns={menuAnchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem component={AddAccountDialog} onClose={this.handleClose} className={classes.menuItem}>Add Account</MenuItem>\n            <MenuItem component={Link} to=\"/history\" onClick={this.handleClose} className={classes.menuItem}>History</MenuItem>\n            <MenuItem component={ResetDialog} onClose={this.handleClose} className={classes.menuItem}>Reset Data</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Header)","import moment from 'moment'\nimport React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    padding: theme.spacing.unit * 3,\n    paddingBottom: 0,\n    textAlign: 'center'\n  },\n  right: {\n    textAlign: 'right'\n  }\n})\n\nconst HistoryList = ({ classes, history }) => (\n  history.length ?\n    <List component=\"nav\">\n      {history.map((el, key) =>\n        <React.Fragment key={key}>\n          <ListItem>\n            <ListItemText primary={el.text} />\n            <ListItemText primary={moment(el.date).calendar()} className={classes.right} />\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      )}\n    </List>\n    :\n    <>\n      <Typography variant=\"h5\" className={classes.empty} >\n        Your history is empty\n      </Typography>\n      <Typography variant=\"subtitle1\" className={classes.empty} >\n        Add some accounts and make some transfers to populate the list\n      </Typography>\n    </>\n)\n\nHistoryList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(HistoryList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport GroupList from './accounts/GroupList'\nimport Details from './accounts/Details'\nimport ErrorPage from './error/ErrorPage'\nimport Header from './Header'\nimport HistoryList from './history/HistoryList'\n\nconst RouterMap = () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route exact path='/' render={() => <GroupList />} />\n        <Route path='/history' render={() => <HistoryList />} />\n        <Route path='/details/:accountId' render={(props) => <Details {...props} />} />\n        <Route component={ErrorPage} />\n      </Switch>\n    </>\n  </Router>\n)\n\nexport default connect()(RouterMap)","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport RouterMap from './RouterMap'\nimport { fetchRates } from '../redux/actions'\n\nclass App extends Component {\n  componentDidMount() {\n    const currencies = this.props.accounts.map((a) => a.currency)\n    if ([...new Set(currencies)] > 1) {\n      this.props.fetchRates(this.props.defaultCurrency)\n    }\n  }\n\n  render() {\n    return (\n      <RouterMap />\n    )\n  }\n}\n\nApp.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  accounts: state.accounts,\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nexport default connect(mapStateToProps, { fetchRates })(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { uniqueId } from '../../lib/helpers'\n\nconst initialState = [\n  'Cash',\n  'Cards & Bank Accounts',\n  'Debts',\n  'Investments',\n  'Others'\n].map((name) => ({\n  id: uniqueId(),\n  name\n}))\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_GROUP': {\n      return state.map((group) => {\n        if (group.id === action.payload.groupId) {\n          return {\n            ...group,\n            collapsed: action.payload.collapsed\n          }\n        }\n        return group\n      })\n    }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  defaultCurrency: 'EUR'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_DEFAULT_CURRENCY': {\n      return {\n        ...state,\n        defaultCurrency: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport accounts from './accounts'\nimport groups from './groups'\nimport history from './history'\nimport rates from './rates'\nimport settings from './settings'\nimport { uniqueId } from '../../lib/helpers'\n\nconst allReducers = combineReducers({\n  accounts,\n  groups,\n  history,\n  rates,\n  settings\n})\n\nexport default (state, action) => {\n  if (action.type === 'RESET_DATA') {\n    // not a state mutation, just reassigning the ref of the local var state\n    state = undefined\n  }\n\n  if (action.type === 'LOAD_DEMO_DATA') {\n    state = {\n      ...state,\n      accounts: [\n        // Cash\n        { name: 'Wallet', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups[0].id },\n        { name: 'Travel Change', id: uniqueId(), currency: 'EUR', value: 95, groupId: state.groups[0].id },\n\n        // Cards & Bank Accounts\n        { name: 'Debit Card', id: uniqueId(), currency: 'USD', value: 8500, groupId: state.groups[1].id },\n        { name: 'TransferWise', id: uniqueId(), currency: 'USD', value: 1500, groupId: state.groups[1].id },\n        { name: 'Canadian Account', id: uniqueId(), currency: 'CAD', value: 500, groupId: state.groups[1].id },\n\n        // Investments\n        { name: 'P2P Lending', id: uniqueId(), currency: 'EUR', value: 5000, groupId: state.groups[3].id },\n        { name: 'Stocks', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups[3].id },\n        { name: 'Crypto funds', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups[3].id },\n\n        // Other Accounts\n        { name: 'PayPal', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups[4].id }\n      ],\n      settings: {\n        defaultCurrency: 'USD'\n      }\n    }\n  }\n\n  return allReducers(state, action)\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ACCOUNT': {\n      return [...state, action.payload]\n    }\n\n    case 'MAKE_DEPOSIT': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.value\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_WITHDRAWAL': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.value)\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_TRANSFER': {\n      return state.map((account) => {\n        if (account.id === action.payload.fromAccountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.fromAccountValue)\n          }\n        }\n  \n        if (account.id === action.payload.toAccountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.toAccountValue\n          }\n        }\n        return account\n      })\n    }\n\n    default:\n      return state\n  }\n}","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_HISTORY': {\n      action.payload.text = action.payload.text.replace(/ {2}/g, '')\n      return [action.payload, ...state]\n    }\n\n    default:\n      return state\n  }\n}","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_RATES_SUCCESS': {\n      return {...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}","import { throttle } from 'lodash'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers/index'\n\nconst initialState = {\n  accounts: [],\n  history: [],\n  rates: {},\n  ...JSON.parse(localStorage.getItem('reactwallet'))\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(throttle(() => {\n  localStorage.setItem('reactwallet', JSON.stringify(store.getState()))\n}, 1000))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}