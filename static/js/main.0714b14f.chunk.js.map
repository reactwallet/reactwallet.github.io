{"version":3,"sources":["lib/constants.jsx","lib/helpers.jsx","redux/actions.jsx","redux/reducers/groups.jsx","components/accounts/AddAccountDialog.jsx","components/accounts/AccountItem.jsx","redux/reducers/accounts.jsx","components/common/TotalBalanceOrProgress.jsx","components/accounts/GroupItem.jsx","components/common/Notice.jsx","components/accounts/GroupList.jsx","components/error/ErrorPage.jsx","components/accounts/DepositDialog.jsx","components/accounts/DeleteAccountDialog.jsx","components/accounts/EditAccountDialog.jsx","components/accounts/WithdrawDialog.jsx","components/accounts/TransferDialog.jsx","components/accounts/Details.jsx","components/settings/DefaultCurrencySelect.jsx","components/settings/ResetDialog.jsx","components/settings/SettingsPage.jsx","components/Header.jsx","components/history/HistoryList.jsx","components/RouterMap.jsx","components/App.jsx","serviceWorker.js","redux/reducers/settings.jsx","redux/reducers/index.jsx","redux/reducers/history.jsx","redux/reducers/rates.jsx","redux/store.jsx","index.jsx"],"names":["ALL_CURRENCIES","uniqueId","Math","random","toString","substr","getTotalBalance","accounts","rates","defaultCurrency","defaultRates","reduce","res","account","currency","Number","value","toFixed","normalizeState","state","Array","isArray","byId","item","id","allIds","map","addAccount","payload","type","addHistory","changeDefaultCurrency","fetchRates","dispatch","getState","fetch","then","handleErrors","json","Object","defineProperty","base","catch","error","fetchRatesFailure","response","ok","Error","statusText","initialState","name","push","combineReducers","arguments","length","undefined","action","objectSpread","groupId","collapsed","getAllGroups","getDefaultState","props","groups","nameFieldError","AddAccountDialog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","field","event","target","max","trim","setState","handleOpen","open","handleClose","handleSubmit","text","concat","date","moment","format","hasAccounts","classes","react_default","a","createElement","Fragment","Fab_default","color","aria-label","className","fab","onClick","Add_default","Dialog_default","PaperProps","dialog","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","fullWidth","required","label","placeholder","onChange","InputLabelProps","shrink","select","dense","SelectProps","native","group","key","DialogActions_default","Button_default","React","Component","compose","connect","settings","withStyles","theme","position","bottom","spacing","unit","right","zIndex","maxWidth","width","marginTop","linkListItem","textDecoration","listItemButton","palette","active","paddingLeft","paddingRight","breakpoints","down","whiteSpace","_ref","Link","to","ListItem_default","button","ListItemText_default","primary","primaryTypographyProps","Divider_default","newState","accountId","_objectSpread6","fromAccount","fromAccountId","toAccount","toAccountId","fromAccountValue","toAccountValue","toConsumableArray","filter","getAllAccounts","ownProps","total","indexOf","CircularProgress_default","size","GroupItem","handleClick","toggleGroup","_this$props","common_TotalBalanceOrProgress","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","accounts_AccountItem","fontWeight","marginRight","sort","b","empty","paddingTop","&:last-child","paddingBottom","children","title","Typography_default","variant","lineHeight","loadButton","typography","subtitle1","textTransform","padding","minWidth","&:hover","backgroundColor","loadDemoData","accounts_AddAccountDialog","ListSubheader_default","disableSticky","accounts_GroupItem","disableTypography","common_Notice","e","ErrorPage","DepositDialog","makeDeposit","index_es","style","fontSize","marginLeft","DeleteAccountDialog","deleteAccount","IconButton_default","Delete_default","DialogContentText_default","EditAccountDialog","editAccount","oldGroup","find","newGroup","Edit_default","WithdrawDialog","min","makeWithdrawal","TransferDialog","rate","alert","makeTransfer","_this2","objectWithoutProperties","actionButton","String","listSubheader","display","justifyContent","actions","marginBottom","& svg","term","desc","textAlign","match","params","hasOtherAccounts","currencyRatesArr","entries","accounts_EditAccountDialog","accounts_DeleteAccountDialog","accounts_DepositDialog","accounts_WithdrawDialog","accounts_TransferDialog","Table_default","table","TableHead_default","TableRow_default","TableCell_default","colSpan","TableBody_default","_ref2","_ref3","slicedToArray","scope","align","error_ErrorPage","DefaultCurrencySelect","mapDispatchToProps","ResetDialog","resetData","root","SettingsPage","settings_DefaultCurrencySelect","settings_ResetDialog","Header","menuAnchorEl","currentTarget","AppBar_default","Toolbar_default","grow","aria-owns","aria-haspopup","MoreVert_default","Menu_default","anchorEl","Boolean","MenuItem_default","menuItem","flexGrow","history","el","secondary","calendar","secondaryTypographyProps","paper","margin","up","BrowserRouter","components_Header","Paper_default","Switch","Route","exact","path","GroupList","HistoryList","render","accounts_Details","App","currencies","Set","components_RouterMap","window","location","hostname","allReducers","replace","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","throttle","setItem","stringify","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0714b14f.chunk.js","sourcesContent":["export const ALL_CURRENCIES = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',\n'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JPY', 'KRW',\n'MXN', 'MYR', 'NOK', 'NZD', 'PHP', 'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB',\n'TRY', 'USD', 'ZAR']","// Return a pseudo-random uniqueId for using it for group and account ids\nexport const uniqueId = () => {\n  return '_' + Math.random().toString(36).substr(2, 9)\n}\n\nexport const getTotalBalance = (accounts, rates, defaultCurrency) => {\n  const defaultRates = rates[defaultCurrency] || {}\n\n  return accounts.reduce((res, account) => {\n    if (account.currency === defaultCurrency) {\n      return res + Number(account.value)\n    }\n    return res + Number(account.value) / defaultRates[account.currency]\n  }, 0).toFixed(2) + ' ' + defaultCurrency\n}\n\n// This updates any old store array formats to the new normalized structure\nexport const normalizeState = (state) => {\n  if (!Array.isArray(state)) {\n    return state\n  }\n\n  return {\n    byId: state.reduce((res, item) => {\n      res[item.id] = item\n      return res\n    }, {}),\n    allIds: state.map((item) => item.id)\n  }\n}\n","// Account actions\nexport const toggleGroup = (payload) => ({\n  type: 'TOGGLE_GROUP',\n  payload\n})\n\nexport const addAccount = (payload) => ({\n  type: 'ADD_ACCOUNT',\n  payload\n})\n\nexport const editAccount = (payload) => ({\n  type: 'EDIT_ACCOUNT',\n  payload\n})\n\nexport const deleteAccount = (payload) => ({\n  type: 'DELETE_ACCOUNT',\n  payload\n})\n\nexport const makeDeposit = (payload) => ({\n  type: 'MAKE_DEPOSIT',\n  payload\n})\n\nexport const makeWithdrawal = (payload) => ({\n  type: 'MAKE_WITHDRAWAL',\n  payload\n})\n\nexport const makeTransfer = (payload) => ({\n  type: 'MAKE_TRANSFER',\n  payload\n})\n\n// History actions\nexport const addHistory = (payload) => ({\n  type: 'ADD_HISTORY',\n  payload\n})\n\n// Settings actions\nexport const resetData = () => ({\n  type: 'RESET_DATA'\n})\n\nexport const loadDemoData = () => ({\n  type: 'LOAD_DEMO_DATA'\n})\n\nexport const changeDefaultCurrency = (payload) => ({\n  type: 'CHANGE_DEFAULT_CURRENCY',\n  payload\n})\n\n// Rates actions\nexport const fetchRatesSuccess = (payload) => ({\n  type: 'FETCH_RATES_SUCCESS',\n  payload: {\n    [payload.base]: payload.rates\n  }\n})\n\n// Currently there is no reducer for the failure\nexport const fetchRatesFailure = (error) => ({\n  type: 'FETCH_RATES_FAILURE',\n  payload: error\n})\n\nexport const fetchRates = (currency) => {\n  return (dispatch, getState) => fetch('https://api.exchangeratesapi.io/latest?base=' + currency)\n    .then(handleErrors)\n    .then((res) => res.json())\n    .then((json) => {\n      dispatch(fetchRatesSuccess(json))\n    })\n    .catch((error) => dispatch(fetchRatesFailure(error)))\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}","import { combineReducers } from 'redux'\nimport { uniqueId } from '../../lib/helpers'\n\n// This initialState is used to populate the groups store for the first time,\n// then it goes to the localStorage and will be loaded from there afterwards\nconst initialState = [\n  'Cash',\n  'Cards & Bank Accounts',\n  'Debts',\n  'Investments',\n  'Others'\n].reduce((res, name) => {\n  const id = uniqueId()\n  res.byId[id] = {\n    id,\n    name\n  }\n  res.allIds.push(id)\n  return res\n}, {\n  byId: {},\n  allIds: []\n})\n\nconst byId = (state = initialState.byId, action) => {\n  switch (action.type) {\n    case 'TOGGLE_GROUP': {\n      return {\n        ...state,\n        [action.payload.groupId]: {\n          ...state[action.payload.groupId],\n          collapsed: action.payload.collapsed\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst allIds = (state = initialState.allIds) => state\n\nexport default combineReducers({\n  byId,\n  allIds\n})\n\nexport const getAllGroups = (state) =>\n  state.allIds.map((id) => state.byId[id])\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Fab from '@material-ui/core/Fab'\nimport TextField from '@material-ui/core/TextField'\n\nimport { ALL_CURRENCIES } from '../../lib/constants'\nimport { uniqueId } from '../../lib/helpers'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\nimport { getAllGroups } from '../../redux/reducers/groups'\n\nconst styles = (theme) => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 6,\n    right: theme.spacing.unit * 6,\n    zIndex: 1\n  },\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: '',\n  groupId: props.groups[0].id,\n  currency: props.defaultCurrency,\n  value: '',\n  nameFieldError: false\n})\n\nclass AddAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'value') {\n      value = Math.max(0, Number(event.target.value))\n    }\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      const value = this.state.value || 0\n\n      if (!this.props.rates[this.state.currency]) {\n        this.props.fetchRates(this.state.currency)\n        this.props.fetchRates(this.props.defaultCurrency)\n      }\n\n      this.props.addAccount({\n        id: uniqueId(),\n        name: this.state.name,\n        groupId: this.state.groupId,\n        currency: this.state.currency,\n        value: value\n      })\n\n      this.props.addHistory({\n        text: `Created ${this.state.name} account with ${value} ${this.state.currency} balance`,\n        date: moment().format()\n      })\n\n      // If this is the first account change the default currency to that of the account\n      if (!this.props.hasAccounts && this.props.defaultCurrency !== this.state.currency) {\n        this.props.changeDefaultCurrency(this.state.currency)\n\n        this.props.addHistory({\n          text: `Default currency has been automatically changed to ${this.state.currency}`,\n          date: moment().format()\n        })\n      }\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} onClick={this.handleOpen}>\n          <AddIcon />\n        </Fab>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                select\n                label=\"Currency\"\n                className={classes.dense}\n                value={this.state.currency}\n                onChange={this.handleChange('currency')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {ALL_CURRENCIES.map(currency => (\n                  <option key={currency} value={currency}>\n                    {currency}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                label=\"Amount (optional)\"\n                placeholder=\"0.00\"\n                type=\"number\"\n                className={classes.dense}\n                value={this.state.value}\n                onChange={this.handleChange('value')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nAddAccountDialog.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  groups: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: state.accounts.allIds.length > 0,\n  defaultCurrency: state.settings.defaultCurrency,\n  groups: getAllGroups(state.groups),\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { addAccount, addHistory, fetchRates, changeDefaultCurrency }),\n  withStyles(styles)\n)(AddAccountDialog)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst styles = (theme) => ({\n  linkListItem: {\n    textDecoration: 'none'\n  },\n  listItemButton: {\n    color: theme.palette.action.active,\n    paddingLeft: theme.spacing.unit * 6,\n    paddingRight: theme.spacing.unit * 7,\n    [theme.breakpoints.down(375)]: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2\n    }\n  },\n  value: {\n    whiteSpace: 'nowrap'\n  }\n})\n\nconst AccountItem = ({ account, classes }) => (\n  <>\n    <Link to={'/details/' + account.id} className={classes.linkListItem} >\n      <ListItem button classes={{ button: classes.listItemButton }}>\n        <ListItemText\n            primary={account.name}\n            primaryTypographyProps={{ className: \"noWrap\" }} />\n        <span className={classes.value}>\n          {Number(account.value).toFixed(2) + ' ' + account.currency}\n        </span>\n      </ListItem>\n    </Link>\n    <Divider />\n  </>\n)\n\nAccountItem.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect()\n)(AccountItem)","import { combineReducers } from 'redux'\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_ACCOUNT': {\n      return {\n        ...state,\n        [action.payload.id]: action.payload\n      }\n    }\n\n    case 'EDIT_ACCOUNT': {\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      }\n    }\n\n    case 'DELETE_ACCOUNT': {\n      const newState = { ...state }\n      delete newState[action.payload.id]\n      return newState\n    }\n\n    case 'MAKE_DEPOSIT': {\n      const account = state[action.payload.accountId]\n\n      return {\n        ...state,\n        [action.payload.accountId]: {\n          ...account,\n          value: Number(account.value) + action.payload.value\n        }\n      }\n    }\n  \n    case 'MAKE_WITHDRAWAL': {\n      const account = state[action.payload.accountId]\n\n      return {\n        ...state,\n        [action.payload.accountId]: {\n          ...account,\n          value: Math.max(0, Number(account.value) - action.payload.value)\n        }\n      }\n    }\n  \n    case 'MAKE_TRANSFER': {\n      const fromAccount = state[action.payload.fromAccountId]\n      const toAccount = state[action.payload.toAccountId]\n\n      return {\n        ...state,\n        [action.payload.fromAccountId]: {\n          ...fromAccount,\n          value: Math.max(0, Number(fromAccount.value) - action.payload.fromAccountValue)\n        },\n        [action.payload.toAccountId]: {\n          ...toAccount,\n          value: Number(toAccount.value) + action.payload.toAccountValue\n        }\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst allIds = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ACCOUNT': {\n      return [...state, action.payload.id]\n    }\n    case 'DELETE_ACCOUNT': {\n      return state.filter((id) => id !== action.payload.id)\n    }\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  allIds\n})\n\nexport const getAllAccounts = (state) =>\n  state.allIds.map((id) => state.byId[id])\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { getTotalBalance } from '../../lib/helpers'\nimport { getAllAccounts } from '../../redux/reducers/accounts'\n\nconst TotalBalanceOrProgress = ({ total }) =>  (\n  <>\n    {\n      ~total.indexOf('NaN') ?\n      <CircularProgress size={20} /> :\n      total\n    }\n  </>\n)\n\nTotalBalanceOrProgress.propTypes = {\n  total: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const accounts = ownProps.accounts || getAllAccounts(state.accounts)\n  return {\n    total: getTotalBalance(accounts, state.rates, state.settings.defaultCurrency)\n  }\n}\n\nexport default connect(mapStateToProps)(TotalBalanceOrProgress)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport AccountItem from './AccountItem'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { toggleGroup } from '../../redux/actions'\nimport { getAllAccounts } from '../../redux/reducers/accounts'\n\nconst styles = (theme) => ({\n  total: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing.unit * 2,\n    whiteSpace: 'nowrap'\n  }\n})\n\nclass GroupItem extends React.Component {\n  handleClick = () => {\n    this.props.toggleGroup({\n      groupId: this.props.group.id,\n      collapsed: !this.props.group.collapsed\n    })\n  }\n\n  render() {\n    const { accounts, classes, group } = this.props\n\n    return (\n      <>\n        {\n          accounts.length > 0 &&\n          <React.Fragment key={group.name}>\n            <ListItem button onClick={this.handleClick}>\n              <ListItemText\n                  primary={group.name}\n                  primaryTypographyProps={{ className: \"noWrap\" }} />\n              <span className={classes.total}>\n                <TotalBalanceOrProgress accounts={accounts} />\n              </span>\n              {group.collapsed ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Divider />\n            <Collapse in={!group.collapsed} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {\n                  accounts.length > 0 && (accounts.map((account) =>\n                    <AccountItem account={account} key={account.id} />\n                  ))\n                }\n              </List>\n            </Collapse>\n            <Divider />\n          </React.Fragment>\n        }\n      </>\n    )\n  }\n}\n\nGroupItem.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  group: PropTypes.object.isRequired,\n  toggleGroup: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: getAllAccounts(state.accounts).filter((account) => {\n    return account.groupId === ownProps.group.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1)\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { toggleGroup })\n)(GroupItem)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n\n    '&:last-child': {\n      paddingBottom: theme.spacing.unit * 3\n    }\n  }\n})\n\nconst Notice = ({ classes, children, title }) => (\n  <>\n    <Typography variant=\"h5\" className={classes.empty} >\n      {title}\n    </Typography>\n    <Typography variant=\"subtitle1\" className={classes.empty} >\n      {children}\n    </Typography>\n  </>\n)\n\nNotice.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.array.isRequired,\n    PropTypes.string.isRequired\n  ]),\n  title: PropTypes.string.isRequired\n}\n\nexport default withStyles(styles)(Notice)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport AddAccountDialog from './AddAccountDialog'\nimport GroupItem from './GroupItem'\nimport Notice from '../common/Notice'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { addHistory, fetchRates, loadDemoData } from '../../redux/actions'\nimport { getAllGroups } from '../../redux/reducers/groups'\n\nconst styles = (theme) => ({\n  total: {\n    lineHeight: 1.5,\n    fontWeight: 'bold',\n    paddingRight: theme.spacing.unit * 7\n  },\n  loadButton: {\n    ...theme.typography.subtitle1,\n    textTransform: 'none',\n    textDecoration: 'underline',\n    padding: 0,\n    minWidth: 'auto',\n    color: '#0000EE',\n\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  }\n})\n\nconst GroupList = ({ addHistory, classes, groups, hasAccounts, loadDemoData, fetchRates }) => {\n  const handleOnClick = (e) => {\n    loadDemoData()\n    fetchRates('USD')\n    addHistory({\n      text: 'Loaded the wallet with the demo data',\n      date: moment().format()\n    })\n  }\n\n  return (\n    <>\n      <AddAccountDialog />\n      { hasAccounts ?\n        <List disablePadding={true}>\n          <ListSubheader disableSticky={true}>Accounts</ListSubheader>\n          <Divider />\n          {groups.map((group) =>\n            <GroupItem key={group.id} group={group} />\n          )}\n          <ListItem className={classes.total}>\n            <ListItemText primary=\"Total\" disableTypography={true} />\n            <TotalBalanceOrProgress />\n          </ListItem>\n        </List>\n        :\n        <Notice title=\"Your wallet is empty\">\n          Add accounts from the button below or\n          &nbsp;\n          <Button color=\"primary\" onClick={handleOnClick} className={classes.loadButton}>\n            load\n          </Button>\n          &nbsp;\n          some dummy data for demo purposes\n        </Notice>\n      }\n    </>\n  )\n}\n\nGroupList.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  loadDemoData: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: state.accounts.allIds.length > 0,\n  groups: getAllGroups(state.groups)\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { addHistory, fetchRates, loadDemoData })\n)(GroupList)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Notice from '../common/Notice'\n\nconst ErrorPage = () => (\n  <Notice title=\"Page not found\">\n    You can start from <Link to=\"/\">here</Link>\n  </Notice>\n)\n\nexport default ErrorPage\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeDeposit, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass DepositDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    this.setState({ value: Math.max(0, Number(event.target.value)) })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeDeposit({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Deposited ${this.state.value} ${this.props.account.currency} to \\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"primary\" onClick={this.handleOpen} >\n          Deposit\n          <Add style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"deposit-dialog-title\"\n        >\n          <DialogTitle id=\"deposit-dialog-title\">Deposit Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Deposit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDepositDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeDeposit: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeDeposit, addHistory }),\n  withStyles(styles)\n)(DepositDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { deleteAccount, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  }\n})\n\nclass DeleteAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false\n    }\n  }\n\n  handleOpen = (event) => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.deleteAccount(this.props.account)\n\n    this.props.addHistory({\n      text: `Removed account ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <IconButton className={classes.button} aria-label=\"Delete\" onClick={this.handleOpen} >\n          <DeleteIcon />\n        </IconButton>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Delete Account</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dense}>\n              This action will remove both the account and its\n              balance and cannot be undone.<br/><br/>\n              Are you sure?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className=\"noDecoration\">\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Delete\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default compose(\n  connect(null, { deleteAccount, addHistory }),\n  withStyles(styles)\n)(DeleteAccountDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport EditIcon from '@material-ui/icons/Edit'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\n\nimport { editAccount, addHistory } from '../../redux/actions'\nimport { getAllGroups } from '../../redux/reducers/groups'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: props.account.name,\n  groupId: props.account.groupId,\n  nameFieldError: false\n})\n\nclass EditAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      this.props.editAccount({\n        id: this.props.account.id,\n        name: this.state.name,\n        groupId: this.state.groupId\n      })\n\n      const oldGroup = this.props.groups.find((group) => {\n        return group.id === this.props.account.groupId\n      })\n      const newGroup = this.props.groups.find((group) => {\n        return group.id === this.state.groupId\n      })\n\n      this.props.addHistory({\n        text: `Account ${this.props.account.name} (${oldGroup.name}) was changed to \\\n          ${this.state.name} (${newGroup.name}) `,\n        date: moment().format()\n      })\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <IconButton className={classes.button} aria-label=\"Edit\" onClick={this.handleOpen} >\n          <EditIcon />\n        </IconButton>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Edit Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Edit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nEditAccountDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  editAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  groups: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  groups: getAllGroups(state.groups)\n})\n\nexport default compose(\n  connect(mapStateToProps, { editAccount, addHistory }),\n  withStyles(styles)\n)(EditAccountDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Remove } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeWithdrawal, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass WithdrawDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      value = Math.max(0, Number(value))\n      value = Math.min(value, props.account.value)\n\n      return { value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeWithdrawal({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Withdrew ${this.state.value} ${this.props.account.currency} from \\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"secondary\" onClick={this.handleOpen} >\n          Withdraw\n          <Remove style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"withdraw-dialog-title\"\n        >\n          <DialogTitle id=\"withdraw-dialog-title\">Withdraw Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Withdraw\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nWithdrawDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeWithdrawal: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeWithdrawal, addHistory }),\n  withStyles(styles)\n)(WithdrawDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { CompareArrows } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeTransfer, addHistory } from '../../redux/actions'\nimport { getAllAccounts } from '../../redux/reducers/accounts'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  actionButton: {\n    color: 'green'\n  }\n})\n\nconst getDefaultState = (props) => ({\n  fromAccountValue: '',\n  toAccountId: props.accounts[0].id\n})\n\nclass TransferDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      if (name === 'fromAccountValue') {\n        value = Math.max(0, Number(value))\n        value = Math.min(value, props.fromAccount.value)\n      }\n\n      return { [name]: value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState((state, props) => {\n      return {\n        open: true,\n        ...getDefaultState(props)\n      }\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.fromAccountValue > 0) {\n      let rate = 1\n      const fromAccount = this.props.fromAccount\n      const toAccount = this.props.accounts.find((a) => a.id === this.state.toAccountId)\n      const payload = {\n        fromAccountId: this.props.fromAccount.id,\n        fromAccountValue: this.state.fromAccountValue,\n        toAccountId: this.state.toAccountId\n      }\n\n      if (fromAccount.currency !== toAccount.currency) {\n        const thisRates = this.props.rates[fromAccount.currency] || {}\n        rate = thisRates[toAccount.currency]\n\n        if (!rate) {\n          alert('No rate for this, please try again. If that doesn\\'t help, refresh the page')\n          this.handleClose()\n          return\n        }\n      }\n\n      payload.toAccountValue = payload.fromAccountValue * rate\n\n      this.props.makeTransfer(payload)\n\n      this.props.addHistory({\n        text: `Transfered ${fromAccount.value} ${fromAccount.currency} from \\\n          ${fromAccount.name} to ${payload.toAccountValue} ${toAccount.currency} in \\\n          ${toAccount.name}`,\n        date: moment().format()\n      })\n    }\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const toAccount = props.accounts.find((a) => a.id === this.state.toAccountId)\n    \n    let rate = 1\n    if (props.fromAccount.currency !== toAccount.currency) {\n      const thisRates = props.rates[props.fromAccount.currency] || {}\n      rate = thisRates[toAccount.currency]\n    }\n\n    return (\n      <>\n        <Button onClick={this.handleOpen} className={classes.actionButton} >\n          Transfer\n          <CompareArrows style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"transfer-dialog-title\"\n        >\n          <DialogTitle id=\"transfer-dialog-title\">Transfer Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              select\n              fullWidth\n              label=\"Transfer To\"\n              value={this.state.toAccountId}\n              onChange={this.handleChange('toAccountId')}\n              SelectProps={{\n                native: true\n              }}\n            >\n              {props.accounts.map((account) => (\n                <option key={account.id} value={account.id}>\n                  {account.name}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.fromAccountValue}\n              onChange={this.handleChange('fromAccountValue')}\n              className={classes.dense}\n            />\n            <DialogContentText className={classes.dense}>\n              The transfer will happen with an exchange rate of: <b>{String(rate)}</b>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} className={classes.actionButton} >\n              Transfer\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nTransferDialog.propTypes = {\n  fromAccount: PropTypes.object.isRequired,\n  accounts: PropTypes.array.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeTransfer: PropTypes.func.isRequired,\n  rates: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: getAllAccounts(state.accounts).filter((a) => {\n    return a.id !== ownProps.fromAccount.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1),\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { makeTransfer, addHistory }),\n  withStyles(styles)\n)(TransferDialog)\n","import React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Divider from '@material-ui/core/Divider'\n\nimport ErrorPage from '../error/ErrorPage'\nimport DepositDialog from './DepositDialog'\nimport DeleteAccountDialog from './DeleteAccountDialog'\nimport EditAccountDialog from './EditAccountDialog'\nimport WithdrawDialog from './WithdrawDialog'\nimport TransferDialog from './TransferDialog'\nimport { fetchRates } from '../../redux/actions'\nimport { getAllAccounts } from '../../redux/reducers/accounts'\n\nconst styles = (theme) => ({\n  listSubheader: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  actions: {\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 3,\n    justifyContent: 'space-evenly',\n    [theme.breakpoints.down(375)]: {\n      '& svg': {\n        display: 'none'\n      }\n    }\n  },\n  term: {\n    maxWidth: '10em'\n  },\n  desc: {\n    fontWeight: 'bold',\n    textAlign: 'right'\n  }\n})\n\nconst Details = ({ account, classes, fetchRates, groups, hasOtherAccounts, rates }) => {\n  if (!account.id) {\n    return (<ErrorPage />)\n  } else {\n    if (!rates[account.currency]) {\n      fetchRates(account.currency)\n    }\n\n    const currencyRatesArr = Object.entries(rates[account.currency] || {}).sort((a, b) => {\n      return a[0] > b[0] ? 1 : -1\n    })\n\n    return (\n      <List disablePadding={true}>\n        <ListSubheader disableSticky={true} className={classes.listSubheader}>\n          Details\n          <div>\n            <EditAccountDialog account={account} />\n            <DeleteAccountDialog account={account} />\n          </div>\n        </ListSubheader>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Account\" className={classes.term} />\n          <ListItemText primary={account.name} primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Group\" className={classes.term} />\n          <ListItemText primary={(groups.byId[account.groupId]).name} primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider/>\n        <ListItem>\n          <ListItemText primary=\"Balance\" className={classes.term} />\n          <ListItemText\n            primary={Number(account.value).toFixed(2) + \" \" + account.currency}\n            primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider/>\n\n        <div className={classes.actions}>\n          <DepositDialog account={account} />\n          <WithdrawDialog account={account} />\n          {\n            hasOtherAccounts &&\n            <TransferDialog fromAccount={account} />\n          }\n        </div>\n        <Divider/>\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell colSpan=\"2\">Currency rates against the {account.currency}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currencyRatesArr.map(([key, value]) => (\n              <TableRow key={key}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {key}\n                </TableCell>\n                <TableCell align=\"right\">{value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </List>\n    )\n  }\n}\n\nDetails.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasOtherAccounts: PropTypes.bool.isRequired,\n  match: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  account: getAllAccounts(state.accounts).find((a) => {\n    return a.id === ownProps.match.params.accountId\n  }) || {},\n  hasOtherAccounts: state.accounts.allIds.length > 1,\n  rates: state.rates,\n  groups: state.groups\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { fetchRates }),\n)(Details)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\n\nimport { ALL_CURRENCIES } from '../../lib/constants'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nclass DefaultCurrencySelect extends React.Component {\n  handleChange = (field) => (event) => {\n    const currency = event.target.value\n\n    this.props.fetchRates(currency)\n    this.props.changeDefaultCurrency(currency)\n    this.props.addHistory({\n      text: `Default currency was changed to ${currency}`,\n      date: moment().format()\n    })\n  }\n\n  render() {\n    return (\n      <TextField\n        select\n        value={this.props.defaultCurrency}\n        onChange={this.handleChange()}\n        SelectProps={{\n          native: true\n        }}\n      >\n        {ALL_CURRENCIES.map((currency) => (\n          <option key={currency} value={currency}>\n            {currency}\n          </option>\n        ))}\n      </TextField>\n    )\n  }\n}\n\nDefaultCurrencySelect.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nconst mapDispatchToProps = {\n  addAccount, addHistory, fetchRates, changeDefaultCurrency\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultCurrencySelect)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { resetData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  }\n})\n\nclass ResetDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.resetData()\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <Button onClick={this.handleOpen} color=\"secondary\" >\n          Reset\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"reset-dialog-title\"\n        >\n          <DialogTitle id=\"reset-dialog-title\">Reset All Data</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              This action will remove all accounts, rates and history\n              and cannot be undone.<br/><br/>\n              Are you sure?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className=\"noDecoration\" >\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Reset\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  resetData: PropTypes.func.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(null, { resetData })\n)(ResetDialog)","import React from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport DefaultCurrencySelect from './DefaultCurrencySelect'\nimport ResetDialog from './ResetDialog'\n\nconst SettingsPage = () => (\n  <List disablePadding={true}>\n    <ListSubheader disableSticky={true}>Settings</ListSubheader>\n    <Divider />\n    <ListItem>\n      <ListItemText primary=\"Default Currency\" />\n      <DefaultCurrencySelect />\n    </ListItem>\n    <Divider />\n\n    <ListItem>\n      <ListItemText primary=\"Reset All Data\" />\n      <ResetDialog />\n    </ListItem>\n    <Divider />\n  </List>\n)\n\nexport default SettingsPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  },\n  menuItem: {\n    minWidth: '120px'\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { menuAnchorEl: null }\n  }\n\n  handleClick = event => {\n    this.setState({ menuAnchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ menuAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { menuAnchorEl } = this.state\n\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <Link to=\"/\" className=\"noDecoration inheritColor\">React Wallet</Link>\n          </Typography>\n          <IconButton\n            aria-owns={menuAnchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem component={Link} to=\"/history\" onClick={this.handleClose} className={classes.menuItem}>History</MenuItem>\n            <MenuItem component={Link} to=\"/settings\" onClick={this.handleClose} className={classes.menuItem}>Settings</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Header)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport Notice from '../common/Notice'\n\nconst HistoryList = ({ history }) => (\n  history.length ?\n    <List disablePadding={true}>\n      <ListSubheader disableSticky={true}>History</ListSubheader>\n      <Divider />\n      {history.map((el, key) =>\n        <React.Fragment key={key}>\n          <ListItem>\n            <ListItemText\n                primary={el.text}\n                secondary={moment(el.date).calendar()}\n                secondaryTypographyProps={{style: {textAlign: 'right'}}}/>\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      )}\n    </List>\n    :\n    <Notice title=\"Your history is empty\">\n      Add some accounts and make some transfers to populate the list\n    </Notice>\n)\n\nHistoryList.propTypes = {\n  history: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history\n})\n\nexport default connect(mapStateToProps)(HistoryList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nimport GroupList from './accounts/GroupList'\nimport Details from './accounts/Details'\nimport ErrorPage from './error/ErrorPage'\nimport SettingsPage from './settings/SettingsPage'\nimport Header from './Header'\nimport HistoryList from './history/HistoryList'\n\nconst styles = (theme) => ({\n  paper: {\n    width: 'auto',\n    margin: theme.spacing.unit * 2,\n    [theme.breakpoints.up(680)]: {\n      width: 600,\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  }\n})\n\nconst RouterMap = ({ classes }) => (\n  <Router>\n    <>\n      <Header />\n      <Paper className={classes.paper}>\n        <Switch>\n          <Route exact path=\"/\" component={GroupList} />\n          <Route path=\"/history\" component={HistoryList} />\n          <Route path=\"/settings\" component={SettingsPage} />\n          <Route path='/details/:accountId' render={(props) => {\n            return <Details {...props} />\n          }} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </Paper>\n    </>\n  </Router>\n)\n\nexport default compose(\n  withStyles(styles),\n  connect(),\n)(RouterMap)","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport RouterMap from './RouterMap'\nimport { fetchRates } from '../redux/actions'\nimport { getAllAccounts } from '../redux/reducers/accounts'\n\nclass App extends Component {\n  componentDidMount() {\n    const currencies = this.props.accounts.map((a) => a.currency)\n    if ([...new Set(currencies)].length > 1) {\n      this.props.fetchRates(this.props.defaultCurrency)\n    }\n  }\n\n  render() {\n    return (\n      <RouterMap />\n    )\n  }\n}\n\nApp.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  accounts: getAllAccounts(state.accounts),\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nexport default connect(mapStateToProps, { fetchRates })(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","const initialState = {\n  defaultCurrency: 'EUR'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_DEFAULT_CURRENCY': {\n      return {\n        ...state,\n        defaultCurrency: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport accounts from './accounts'\nimport groups from './groups'\nimport history from './history'\nimport rates from './rates'\nimport settings from './settings'\nimport { uniqueId, normalizeState } from '../../lib/helpers'\n\nconst allReducers = combineReducers({\n  accounts,\n  groups,\n  history,\n  rates,\n  settings\n})\n\nexport default (state, action) => {\n  if (action.type === 'RESET_DATA') {\n    // not a state mutation, just reassigning the ref of the local var state\n    state = undefined\n  }\n\n  if (action.type === 'LOAD_DEMO_DATA') {\n    state = {\n      ...state,\n      accounts: normalizeState([\n        // Cash\n        { name: 'Wallet', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups.allIds[0] },\n        { name: 'Travel Change', id: uniqueId(), currency: 'EUR', value: 95, groupId: state.groups.allIds[0] },\n\n        // Cards & Bank Accounts\n        { name: 'Debit Card', id: uniqueId(), currency: 'USD', value: 8500, groupId: state.groups.allIds[1] },\n        { name: 'TransferWise', id: uniqueId(), currency: 'USD', value: 1500, groupId: state.groups.allIds[1] },\n        { name: 'Canadian Account', id: uniqueId(), currency: 'CAD', value: 500, groupId: state.groups.allIds[1] },\n\n        // Investments\n        { name: 'P2P Lending', id: uniqueId(), currency: 'EUR', value: 5000, groupId: state.groups.allIds[3] },\n        { name: 'Stocks', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups.allIds[3] },\n        { name: 'Crypto funds', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups.allIds[3] },\n\n        // Other Accounts\n        { name: 'PayPal', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups.allIds[4] }\n      ]),\n      settings: {\n        defaultCurrency: 'USD'\n      }\n    }\n  }\n\n  return allReducers(state, action)\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_HISTORY': {\n      action.payload.text = action.payload.text.replace(/ {2}/g, '')\n      return [action.payload, ...state]\n    }\n\n    default:\n      return state\n  }\n}","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_RATES_SUCCESS': {\n      return {...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}","import { throttle } from 'lodash'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers/index'\nimport { normalizeState } from '../lib/helpers'\n\nconst initialState = {\n  accounts: {},\n  history: [],\n  rates: {},\n  ...JSON.parse(localStorage.getItem('reactwallet'))\n}\n\ninitialState.accounts = normalizeState(initialState.accounts)\ninitialState.groups = normalizeState(initialState.groups)\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(throttle(() => {\n  localStorage.setItem('reactwallet', JSON.stringify(store.getState()))\n}, 1000))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}