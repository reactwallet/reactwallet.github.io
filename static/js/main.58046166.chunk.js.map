{"version":3,"sources":["lib/constants.js","lib/helpers.js","redux/actions.js","components/accounts/AddAccountDialog.js","components/accounts/AccountItem.js","components/common/TotalBalanceOrProgress.js","components/accounts/GroupItem.js","components/common/Notice.js","components/accounts/GroupList.js","components/error/ErrorPage.js","components/accounts/DepositDialog.js","components/accounts/DeleteAccountDialog.js","components/accounts/EditAccountDialog.js","components/accounts/WithdrawDialog.js","components/accounts/TransferDialog.js","components/accounts/Details.js","components/settings/DefaultCurrencySelect.js","components/settings/ResetDialog.js","components/settings/SettingsPage.js","components/Header.js","components/history/HistoryList.js","components/RouterMap.js","components/App.js","serviceWorker.js","redux/reducers/groups.js","redux/reducers/settings.js","redux/reducers/index.js","redux/reducers/accounts.js","redux/reducers/history.js","redux/reducers/rates.js","redux/store.js","index.js"],"names":["ALL_CURRENCIES","uniqueId","Math","random","toString","substr","getTotalBalance","accounts","rates","defaultCurrency","defaultRates","reduce","res","account","currency","Number","value","toFixed","addAccount","payload","type","addHistory","changeDefaultCurrency","fetchRates","dispatch","getState","fetch","then","handleErrors","json","Object","defineProperty","base","catch","error","fetchRatesFailure","response","ok","Error","statusText","getDefaultState","props","name","groupId","groups","id","nameFieldError","AddAccountDialog","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","field","event","target","max","trim","length","setState","handleOpen","objectSpread","open","handleClose","handleSubmit","state","text","concat","date","moment","format","hasAccounts","classes","react_default","a","createElement","Fragment","Fab_default","color","aria-label","className","fab","onClick","Add_default","Dialog_default","PaperProps","dialog","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","fullWidth","required","label","placeholder","onChange","InputLabelProps","shrink","select","dense","SelectProps","native","map","group","key","DialogActions_default","Button_default","React","Component","compose","connect","Boolean","settings","withStyles","theme","position","bottom","spacing","unit","right","zIndex","maxWidth","width","marginTop","linkListItem","textDecoration","listItemButton","palette","action","active","paddingLeft","paddingRight","breakpoints","down","whiteSpace","_ref","Link","to","ListItem_default","button","ListItemText_default","primary","primaryTypographyProps","Divider_default","ownProps","total","indexOf","CircularProgress_default","size","GroupItem","handleClick","toggleGroup","collapsed","_this$props","common_TotalBalanceOrProgress","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","accounts_AccountItem","fontWeight","marginRight","filter","sort","b","empty","paddingTop","&:last-child","paddingBottom","children","title","Typography_default","variant","accounts_GroupList","lineHeight","loadButton","typography","subtitle1","textTransform","padding","minWidth","&:hover","backgroundColor","loadDemoData","accounts_AddAccountDialog","ListSubheader_default","disableSticky","accounts_GroupItem","disableTypography","common_Notice","e","ErrorPage","DepositDialog","makeDeposit","accountId","index_es","style","fontSize","marginLeft","DeleteAccountDialog","deleteAccount","IconButton_default","Delete_default","DialogContentText_default","EditAccountDialog","editAccount","oldGroup","find","newGroup","Edit_default","WithdrawDialog","min","makeWithdrawal","fromAccountValue","toAccountId","TransferDialog","fromAccount","rate","toAccount","fromAccountId","alert","toAccountValue","makeTransfer","_this2","objectWithoutProperties","actionButton","String","accounts_Details","listSubheader","display","justifyContent","actions","marginBottom","& svg","term","desc","textAlign","match","params","hasOtherAccounts","currencyRatesArr","entries","accounts_EditAccountDialog","accounts_DeleteAccountDialog","accounts_DepositDialog","accounts_WithdrawDialog","accounts_TransferDialog","Table_default","table","TableHead_default","TableRow_default","TableCell_default","colSpan","TableBody_default","_ref2","_ref3","slicedToArray","scope","align","error_ErrorPage","DefaultCurrencySelect","mapDispatchToProps","ResetDialog","resetData","root","SettingsPage","settings_DefaultCurrencySelect","settings_ResetDialog","Header","menuAnchorEl","currentTarget","AppBar_default","Toolbar_default","grow","aria-owns","undefined","aria-haspopup","MoreVert_default","Menu_default","anchorEl","MenuItem_default","menuItem","flexGrow","history","el","secondary","calendar","secondaryTypographyProps","paper","margin","up","BrowserRouter","components_Header","Paper_default","Switch","Route","exact","path","GroupList","HistoryList","render","App","currencies","toConsumableArray","Set","components_RouterMap","window","location","hostname","initialState","allReducers","combineReducers","arguments","replace","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","throttle","setItem","stringify","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58046166.chunk.js","sourcesContent":["export const ALL_CURRENCIES = ['AUD', 'BGN', 'BRL', 'CAD', 'CHF', 'CNY', 'CZK', 'DKK',\n'EUR', 'GBP', 'HKD', 'HRK', 'HUF', 'IDR', 'ILS', 'INR', 'ISK', 'JPY', 'KRW',\n'MXN', 'MYR', 'NOK', 'NZD', 'PHP', 'PLN', 'RON', 'RUB', 'SEK', 'SGD', 'THB',\n'TRY', 'USD', 'ZAR']","// Return a pseudo-random uniqueId for using it for group and account ids\nexport const uniqueId = () => {\n  return '_' + Math.random().toString(36).substr(2, 9)\n}\n\nexport const getTotalBalance = (accounts, rates, defaultCurrency) => {\n  const defaultRates = rates[defaultCurrency] || {}\n\n  return accounts.reduce((res, account) => {\n    if (account.currency === defaultCurrency) {\n      return res + Number(account.value)\n    }\n    return res + Number(account.value) / defaultRates[account.currency]\n  }, 0).toFixed(2) + ' ' + defaultCurrency\n}","// Account actions\nexport const toggleGroup = (payload) => ({\n  type: 'TOGGLE_GROUP',\n  payload\n})\n\nexport const addAccount = (payload) => ({\n  type: 'ADD_ACCOUNT',\n  payload\n})\n\nexport const editAccount = (payload) => ({\n  type: 'EDIT_ACCOUNT',\n  payload\n})\n\nexport const deleteAccount = (payload) => ({\n  type: 'DELETE_ACCOUNT',\n  payload\n})\n\nexport const makeDeposit = (payload) => ({\n  type: 'MAKE_DEPOSIT',\n  payload\n})\n\nexport const makeWithdrawal = (payload) => ({\n  type: 'MAKE_WITHDRAWAL',\n  payload\n})\n\nexport const makeTransfer = (payload) => ({\n  type: 'MAKE_TRANSFER',\n  payload\n})\n\n// History actions\nexport const addHistory = (payload) => ({\n  type: 'ADD_HISTORY',\n  payload\n})\n\n// Settings actions\nexport const resetData = () => ({\n  type: 'RESET_DATA'\n})\n\nexport const loadDemoData = () => ({\n  type: 'LOAD_DEMO_DATA'\n})\n\nexport const changeDefaultCurrency = (payload) => ({\n  type: 'CHANGE_DEFAULT_CURRENCY',\n  payload\n})\n\n// Rates actions\nexport const fetchRatesSuccess = (payload) => ({\n  type: 'FETCH_RATES_SUCCESS',\n  payload: {\n    [payload.base]: payload.rates\n  }\n})\n\n// Currently there is no reducer for the failure\nexport const fetchRatesFailure = (error) => ({\n  type: 'FETCH_RATES_FAILURE',\n  payload: error\n})\n\nexport const fetchRates = (currency) => {\n  return (dispatch, getState) => fetch('https://api.exchangeratesapi.io/latest?base=' + currency)\n    .then(handleErrors)\n    .then((res) => res.json())\n    .then((json) => {\n      dispatch(fetchRatesSuccess(json))\n    })\n    .catch((error) => dispatch(fetchRatesFailure(error)))\n}\n\nfunction handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return response\n}","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Fab from '@material-ui/core/Fab'\nimport TextField from '@material-ui/core/TextField'\n\nimport { ALL_CURRENCIES } from '../../lib/constants'\nimport { uniqueId } from '../../lib/helpers'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing.unit * 6,\n    right: theme.spacing.unit * 6,\n    zIndex: 1\n  },\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: '',\n  groupId: props.groups[0].id,\n  currency: props.defaultCurrency,\n  value: '',\n  nameFieldError: false\n})\n\nclass AddAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'value') {\n      value = Math.max(0, Number(event.target.value))\n    }\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      const value = this.state.value || 0\n\n      if (!this.props.rates[this.state.currency]) {\n        this.props.fetchRates(this.state.currency)\n        this.props.fetchRates(this.props.defaultCurrency)\n      }\n\n      this.props.addAccount({\n        id: uniqueId(),\n        name: this.state.name,\n        groupId: this.state.groupId,\n        currency: this.state.currency,\n        value: value\n      })\n\n      this.props.addHistory({\n        text: `Created ${this.state.name} account with ${value} ${this.state.currency} balance`,\n        date: moment().format()\n      })\n\n      // If this is the first account change the default currency to that of the account\n      if (!this.props.hasAccounts && this.props.defaultCurrency !== this.state.currency) {\n        this.props.changeDefaultCurrency(this.state.currency)\n\n        this.props.addHistory({\n          text: `Default currency has been automatically changed to ${this.state.currency}`,\n          date: moment().format()\n        })\n      }\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab} onClick={this.handleOpen}>\n          <AddIcon />\n        </Fab>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                select\n                label=\"Currency\"\n                className={classes.dense}\n                value={this.state.currency}\n                onChange={this.handleChange('currency')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {ALL_CURRENCIES.map(currency => (\n                  <option key={currency} value={currency}>\n                    {currency}\n                  </option>\n                ))}\n              </TextField>\n\n              <TextField\n                fullWidth\n                label=\"Amount (optional)\"\n                placeholder=\"0.00\"\n                type=\"number\"\n                className={classes.dense}\n                value={this.state.value}\n                onChange={this.handleChange('value')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nAddAccountDialog.propTypes = {\n  addAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  groups: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: Boolean(state.accounts.length),\n  defaultCurrency: state.settings.defaultCurrency,\n  groups: state.groups,\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { addAccount, addHistory, fetchRates, changeDefaultCurrency }),\n  withStyles(styles)\n)(AddAccountDialog)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst styles = (theme) => ({\n  linkListItem: {\n    textDecoration: 'none'\n  },\n  listItemButton: {\n    color: theme.palette.action.active,\n    paddingLeft: theme.spacing.unit * 6,\n    paddingRight: theme.spacing.unit * 7,\n    [theme.breakpoints.down(375)]: {\n      paddingLeft: theme.spacing.unit * 2,\n      paddingRight: theme.spacing.unit * 2\n    }\n  },\n  value: {\n    whiteSpace: 'nowrap'\n  }\n})\n\nconst AccountItem = ({ account, classes }) => (\n  <>\n    <Link to={'/details/' + account.id} className={classes.linkListItem} >\n      <ListItem button classes={{ button: classes.listItemButton }}>\n        <ListItemText\n            primary={account.name}\n            primaryTypographyProps={{ className: \"noWrap\" }} />\n        <span className={classes.value}>\n          {Number(account.value).toFixed(2) + ' ' + account.currency}\n        </span>\n      </ListItem>\n    </Link>\n    <Divider />\n  </>\n)\n\nAccountItem.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect()\n)(AccountItem)","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { getTotalBalance } from '../../lib/helpers'\n\nconst TotalBalanceOrProgress = ({ total }) =>  (\n  <>\n    {\n      ~total.indexOf('NaN') ?\n      <CircularProgress size={20} /> :\n      total\n    }\n  </>\n)\n\nTotalBalanceOrProgress.propTypes = {\n  total: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const accounts = ownProps.accounts || state.accounts\n  return {\n    total: getTotalBalance(accounts, state.rates, state.settings.defaultCurrency)\n  }\n}\n\nexport default connect(mapStateToProps)(TotalBalanceOrProgress)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Divider from '@material-ui/core/Divider'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nimport AccountItem from './AccountItem'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { toggleGroup } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  total: {\n    fontWeight: 'bold',\n    marginRight: theme.spacing.unit * 2,\n    whiteSpace: 'nowrap'\n  }\n})\n\nclass GroupItem extends React.Component {\n  handleClick = () => {\n    this.props.toggleGroup({\n      groupId: this.props.group.id,\n      collapsed: !this.props.group.collapsed\n    })\n  }\n\n  render() {\n    const { accounts, classes, group } = this.props\n\n    return (\n      <>\n        {\n          accounts.length > 0 &&\n          <React.Fragment key={group.name}>\n            <ListItem button onClick={this.handleClick}>\n              <ListItemText\n                  primary={group.name}\n                  primaryTypographyProps={{ className: \"noWrap\" }} />\n              <span className={classes.total}>\n                <TotalBalanceOrProgress accounts={accounts} />\n              </span>\n              {group.collapsed ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Divider />\n            <Collapse in={!group.collapsed} timeout=\"auto\" unmountOnExit>\n              <List component=\"div\" disablePadding>\n                {\n                  accounts.length > 0 && (accounts.map((account) =>\n                    <AccountItem account={account} key={account.id} />\n                  ))\n                }\n              </List>\n            </Collapse>\n            <Divider />\n          </React.Fragment>\n        }\n      </>\n    )\n  }\n}\n\nGroupItem.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n  group: PropTypes.object.isRequired,\n  toggleGroup: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((account) => {\n    return account.groupId === ownProps.group.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1)\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { toggleGroup })\n)(GroupItem)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = (theme) => ({\n  empty: {\n    paddingTop: theme.spacing.unit * 3,\n    paddingLeft: theme.spacing.unit * 3,\n    paddingRight: theme.spacing.unit * 3,\n\n    '&:last-child': {\n      paddingBottom: theme.spacing.unit * 3\n    }\n  }\n})\n\nconst Notice = ({ classes, children, title }) => (\n  <>\n    <Typography variant=\"h5\" className={classes.empty} >\n      {title}\n    </Typography>\n    <Typography variant=\"subtitle1\" className={classes.empty} >\n      {children}\n    </Typography>\n  </>\n)\n\nNotice.propTypes = {\n  classes: PropTypes.object.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.array.isRequired,\n    PropTypes.string.isRequired\n  ]),\n  title: PropTypes.string.isRequired\n}\n\nexport default withStyles(styles)(Notice)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport AddAccountDialog from './AddAccountDialog'\nimport GroupItem from './GroupItem'\nimport Notice from '../common/Notice'\nimport TotalBalanceOrProgress from '../common/TotalBalanceOrProgress'\nimport { addHistory, fetchRates, loadDemoData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  total: {\n    lineHeight: 1.5,\n    fontWeight: 'bold',\n    paddingRight: theme.spacing.unit * 7\n  },\n  loadButton: {\n    ...theme.typography.subtitle1,\n    textTransform: 'none',\n    textDecoration: 'underline',\n    padding: 0,\n    minWidth: 'auto',\n    color: '#0000EE',\n\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  }\n})\n\nconst GroupList = ({ addHistory, classes, groups, hasAccounts, loadDemoData, fetchRates }) => {\n  const handleOnClick = (e) => {\n    loadDemoData()\n    fetchRates('USD')\n    addHistory({\n      text: 'Loaded the wallet with the demo data',\n      date: moment().format()\n    })\n  }\n\n  return (\n    <>\n      <AddAccountDialog />\n      { hasAccounts ?\n        <List disablePadding={true}>\n          <ListSubheader disableSticky={true}>Accounts</ListSubheader>\n          <Divider />\n          {groups.map((group) =>\n            <GroupItem key={group.id} group={group} />\n          )}\n          <ListItem className={classes.total}>\n            <ListItemText primary=\"Total\" disableTypography={true} />\n            <TotalBalanceOrProgress />\n          </ListItem>\n        </List>\n        :\n        <Notice title=\"Your wallet is empty\">\n          Add accounts from the button below or\n          &nbsp;\n          <Button color=\"primary\" onClick={handleOnClick} className={classes.loadButton}>\n            load\n          </Button>\n          &nbsp;\n          some dummy data for demo purposes\n        </Notice>\n      }\n    </>\n  )\n}\n\nGroupList.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  hasAccounts: PropTypes.bool.isRequired,\n  loadDemoData: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  hasAccounts: state.accounts.length > 0,\n  groups: state.groups\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { addHistory, fetchRates, loadDemoData })\n)(GroupList)","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Notice from '../common/Notice'\n\nconst ErrorPage = () => (\n  <Notice title=\"Page not found\">\n    You can start from <Link to=\"/\">here</Link>\n  </Notice>\n)\n\nexport default ErrorPage\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Add } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeDeposit, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass DepositDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    this.setState({ value: Math.max(0, Number(event.target.value)) })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeDeposit({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Deposited ${this.state.value} ${this.props.account.currency} to\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"primary\" onClick={this.handleOpen} >\n          Deposit\n          <Add style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"deposit-dialog-title\"\n        >\n          <DialogTitle id=\"deposit-dialog-title\">Deposit Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Deposit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDepositDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeDeposit: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeDeposit, addHistory }),\n  withStyles(styles)\n)(DepositDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport { deleteAccount, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  }\n})\n\nclass DeleteAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false\n    }\n  }\n\n  handleOpen = (event) => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.deleteAccount(this.props.account.id)\n\n    this.props.addHistory({\n      text: `Removed account ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <IconButton className={classes.button} aria-label=\"Delete\" onClick={this.handleOpen} >\n          <DeleteIcon />\n        </IconButton>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Delete Account</DialogTitle>\n          <DialogContent>\n            <DialogContentText className={classes.dense}>\n              This action will remove both the account and its\n              balance and cannot be undone.<br/><br/>\n              Are you sure?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className=\"noDecoration\">\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Delete\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nDeleteAccountDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default compose(\n  connect(null, { deleteAccount, addHistory }),\n  withStyles(styles)\n)(DeleteAccountDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport EditIcon from '@material-ui/icons/Edit'\nimport IconButton from '@material-ui/core/IconButton'\nimport TextField from '@material-ui/core/TextField'\n\nimport { editAccount, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  }\n})\n\nconst getDefaultState = (props) => ({\n  name: props.account.name,\n  groupId: props.account.groupId,\n  nameFieldError: false\n})\n\nclass EditAccountDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (field) => event => {\n    let value = event.target.value\n    if (field === 'name' && value.trim().length) {\n      this.setState({ nameFieldError: false })\n    }\n    this.setState({ [field]: value })\n  }\n\n  handleOpen = (event) => {\n    this.setState({\n      open: true,\n      ...getDefaultState(this.props)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.name) {\n      this.props.editAccount({\n        id: this.props.account.id,\n        name: this.state.name,\n        groupId: this.state.groupId\n      })\n\n      const oldGroup = this.props.groups.find((group) => {\n        return group.id === this.props.account.groupId\n      })\n      const newGroup = this.props.groups.find((group) => {\n        return group.id === this.state.groupId\n      })\n\n      this.props.addHistory({\n        text: `Account ${this.props.account.name} (${oldGroup.name}) was changed to \\\n          ${this.state.name} (${newGroup.name}) `,\n        date: moment().format()\n      })\n\n      this.handleClose()\n    } else {\n      this.setState({ nameFieldError: true })\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <IconButton className={classes.button} aria-label=\"Edit\" onClick={this.handleOpen} >\n          <EditIcon />\n        </IconButton>\n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Edit Account</DialogTitle>\n\n          <DialogContent>\n            <>\n              <TextField\n                error={this.state.nameFieldError}\n                autoFocus\n                fullWidth\n                required\n                label=\"Account name\"\n                placeholder=\"\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                InputLabelProps={{\n                  shrink: true\n                }}\n              />\n\n              <TextField\n                fullWidth\n                select\n                label=\"Group\"\n                className={classes.dense}\n                value={this.state.groupId}\n                onChange={this.handleChange('groupId')}\n                SelectProps={{\n                  native: true\n                }}\n              >\n                {this.props.groups.map((group) => (\n                  <option key={group.id} value={group.id}>\n                    {group.name}\n                  </option>\n                ))}\n              </TextField>\n            </>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"primary\">\n              Edit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nEditAccountDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  editAccount: PropTypes.func.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  groups: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  groups: state.groups\n})\n\nexport default compose(\n  connect(mapStateToProps, { editAccount, addHistory }),\n  withStyles(styles)\n)(EditAccountDialog)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Remove } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeWithdrawal, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  }\n})\n\nclass WithdrawDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      value: ''\n    }\n  }\n\n  handleChange = () => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      value = Math.max(0, Number(value))\n      value = Math.min(value, props.account.value)\n\n      return { value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState({\n      open: true,\n      value: ''\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.makeWithdrawal({\n      accountId: this.props.account.id,\n      value: this.state.value\n    })\n\n    this.props.addHistory({\n      text: `Withdrew ${this.state.value} ${this.props.account.currency} from\\\n        ${this.props.account.name}`,\n      date: moment().format()\n    })\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <>\n        <Button color=\"secondary\" onClick={this.handleOpen} >\n          Withdraw\n          <Remove style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"withdraw-dialog-title\"\n        >\n          <DialogTitle id=\"withdraw-dialog-title\">Withdraw Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.value}\n              onChange={this.handleChange('value')}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Withdraw\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nWithdrawDialog.propTypes = {\n  account: PropTypes.object.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeWithdrawal: PropTypes.func.isRequired\n}\n\nexport default compose(\n  connect(null, { makeWithdrawal, addHistory }),\n  withStyles(styles)\n)(WithdrawDialog)\n","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { CompareArrows } from '@material-ui/icons'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport TextField from '@material-ui/core/TextField'\n\nimport { makeTransfer, addHistory } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 300\n  },\n  dense: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  actionButton: {\n    color: 'green'\n  }\n})\n\nconst getDefaultState = (props) => ({\n  fromAccountValue: '',\n  toAccountId: props.accounts[0].id\n})\n\nclass TransferDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      ...getDefaultState(props)\n    }\n  }\n\n  handleChange = (name) => event => {\n    let value = event.target.value\n\n    this.setState((state, props) => {\n      if (name === 'fromAccountValue') {\n        value = Math.max(0, Number(value))\n        value = Math.min(value, props.fromAccount.value)\n      }\n\n      return { [name]: value }\n    })\n  }\n\n  handleOpen = () => {\n    this.setState((state, props) => {\n      return {\n        open: true,\n        ...getDefaultState(props)\n      }\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    if (this.state.fromAccountValue > 0) {\n      let rate = 1\n      const fromAccount = this.props.fromAccount\n      const toAccount = this.props.accounts.find((a) => a.id === this.state.toAccountId)\n      const payload = {\n        fromAccountId: this.props.fromAccount.id,\n        fromAccountValue: this.state.fromAccountValue,\n        toAccountId: this.state.toAccountId\n      }\n\n      if (fromAccount.currency !== toAccount.currency) {\n        const thisRates = this.props.rates[fromAccount.currency] || {}\n        rate = thisRates[toAccount.currency]\n\n        if (!rate) {\n          alert('No rate for this, please try again. If that doesn\\'t help, refresh the page')\n          this.handleClose()\n          return\n        }\n      }\n\n      payload.toAccountValue = payload.fromAccountValue * rate\n\n      this.props.makeTransfer(payload)\n\n      this.props.addHistory({\n        text: `Transfered ${fromAccount.value} ${fromAccount.currency} from \\\n          ${fromAccount.name} to ${payload.toAccountValue} ${toAccount.currency} in \\\n          ${toAccount.name}`,\n        date: moment().format()\n      })\n    }\n\n    this.handleClose()\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const toAccount = props.accounts.find((a) => a.id === this.state.toAccountId)\n    \n    let rate = 1\n    if (props.fromAccount.currency !== toAccount.currency) {\n      const thisRates = props.rates[props.fromAccount.currency] || {}\n      rate = thisRates[toAccount.currency]\n    }\n\n    return (\n      <>\n        <Button onClick={this.handleOpen} className={classes.actionButton} >\n          Transfer\n          <CompareArrows style={{ fontSize: 16, marginLeft: 6 }}/>\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"transfer-dialog-title\"\n        >\n          <DialogTitle id=\"transfer-dialog-title\">Transfer Funds</DialogTitle>\n          <DialogContent>\n            <TextField\n              select\n              fullWidth\n              label=\"Transfer To\"\n              value={this.state.toAccountId}\n              onChange={this.handleChange('toAccountId')}\n              SelectProps={{\n                native: true\n              }}\n            >\n              {props.accounts.map((account) => (\n                <option key={account.id} value={account.id}>\n                  {account.name}\n                </option>\n              ))}\n            </TextField>\n            <TextField\n              fullWidth\n              label=\"Amount\"\n              type=\"number\"\n              value={this.state.fromAccountValue}\n              onChange={this.handleChange('fromAccountValue')}\n              className={classes.dense}\n            />\n            <DialogContentText className={classes.dense}>\n              The transfer will happen with an exchange rate of: <b>{String(rate)}</b>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} className={classes.actionButton} >\n              Transfer\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  }\n}\n\nTransferDialog.propTypes = {\n  fromAccount: PropTypes.object.isRequired,\n  accounts: PropTypes.array.isRequired,\n  addHistory: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  makeTransfer: PropTypes.func.isRequired,\n  rates: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  accounts: state.accounts.filter((a) => {\n    return a.id !== ownProps.fromAccount.id\n  }).sort((a, b) => a.name > b.name ? 1 : -1),\n  rates: state.rates\n})\n\nexport default compose(\n  connect(mapStateToProps, { makeTransfer, addHistory }),\n  withStyles(styles)\n)(TransferDialog)","import React from 'react'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Divider from '@material-ui/core/Divider'\n\nimport ErrorPage from '../error/ErrorPage'\nimport DepositDialog from './DepositDialog'\nimport DeleteAccountDialog from './DeleteAccountDialog'\nimport EditAccountDialog from './EditAccountDialog'\nimport WithdrawDialog from './WithdrawDialog'\nimport TransferDialog from './TransferDialog'\nimport { fetchRates } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  listSubheader: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  actions: {\n    display: 'flex',\n    marginBottom: theme.spacing.unit * 3,\n    marginTop: theme.spacing.unit * 3,\n    justifyContent: 'space-evenly',\n    [theme.breakpoints.down(375)]: {\n      '& svg': {\n        display: 'none'\n      }\n    }\n  },\n  term: {\n    maxWidth: '10em'\n  },\n  desc: {\n    fontWeight: 'bold',\n    textAlign: 'right'\n  }\n})\n\nconst Details = ({ account, classes, fetchRates, hasOtherAccounts, rates }) => {\n  if (!account.id) {\n    return (<ErrorPage />)\n  } else {\n    if (!rates[account.currency]) {\n      fetchRates(account.currency)\n    }\n\n    const currencyRatesArr = Object.entries(rates[account.currency] || {}).sort((a, b) => {\n      return a[0] > b[0] ? 1 : -1\n    })\n\n    return (\n      <List disablePadding={true}>\n        <ListSubheader disableSticky={true} className={classes.listSubheader}>\n          Details\n          <div>\n            <EditAccountDialog account={account} />\n            <DeleteAccountDialog account={account} />\n          </div>\n        </ListSubheader>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Account\" className={classes.term} />\n          <ListItemText primary={account.name} primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider/>\n        <ListItem>\n          <ListItemText primary=\"Balance\" className={classes.term} />\n          <ListItemText\n            primary={Number(account.value).toFixed(2) + \" \" + account.currency}\n            primaryTypographyProps={{className: classes.desc}} />\n        </ListItem>\n        <Divider/>\n\n        <div className={classes.actions}>\n          <DepositDialog account={account} />\n          <WithdrawDialog account={account} />\n          {\n            hasOtherAccounts &&\n            <TransferDialog fromAccount={account} />\n          }\n        </div>\n        <Divider/>\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell colSpan=\"2\">Currency rates against the {account.currency}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currencyRatesArr.map(([key, value]) => (\n              <TableRow key={key}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {key}\n                </TableCell>\n                <TableCell align=\"right\">{value}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </List>\n    )\n  }\n}\n\nDetails.propTypes = {\n  account: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n  hasOtherAccounts: PropTypes.bool.isRequired,\n  match: PropTypes.object.isRequired,\n  rates: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  account: state.accounts.find((a) => {\n    return a.id === ownProps.match.params.accountId\n  }) || {},\n  hasOtherAccounts: state.accounts.length > 1,\n  rates: state.rates\n})\n\nexport default compose(\n  withStyles(styles),\n  connect(mapStateToProps, { fetchRates }),\n)(Details)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\n\nimport { ALL_CURRENCIES } from '../../lib/constants'\nimport { addAccount, addHistory, fetchRates, changeDefaultCurrency } from '../../redux/actions'\n\nclass DefaultCurrencySelect extends React.Component {\n  handleChange = (field) => (event) => {\n    const currency = event.target.value\n\n    this.props.fetchRates(currency)\n    this.props.changeDefaultCurrency(currency)\n    this.props.addHistory({\n      text: `Default currency was changed to ${currency}`,\n      date: moment().format()\n    })\n  }\n\n  render() {\n    return (\n      <TextField\n        select\n        value={this.props.defaultCurrency}\n        onChange={this.handleChange()}\n        SelectProps={{\n          native: true\n        }}\n      >\n        {ALL_CURRENCIES.map((currency) => (\n          <option key={currency} value={currency}>\n            {currency}\n          </option>\n        ))}\n      </TextField>\n    )\n  }\n}\n\nDefaultCurrencySelect.propTypes = {\n  addHistory: PropTypes.func.isRequired,\n  changeDefaultCurrency: PropTypes.func.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nconst mapDispatchToProps = {\n  addAccount, addHistory, fetchRates, changeDefaultCurrency\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultCurrencySelect)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { resetData } from '../../redux/actions'\n\nconst styles = (theme) => ({\n  dialog: {\n    maxWidth: '80%',\n    width: 450\n  }\n})\n\nclass ResetDialog extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false })\n  }\n\n  handleSubmit = () => {\n    this.props.resetData()\n    this.handleClose()\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <Button onClick={this.handleOpen} color=\"secondary\" >\n          Reset\n        </Button>\n        \n        <Dialog\n          PaperProps={{className: classes.dialog}}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"reset-dialog-title\"\n        >\n          <DialogTitle id=\"reset-dialog-title\">Reset All Data</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              This action will remove all accounts, rates and history\n              and cannot be undone.<br/><br/>\n              Are you sure?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Link to=\"/\" className=\"noDecoration\" >\n              <Button onClick={this.handleSubmit} color=\"secondary\">\n                Reset\n              </Button>\n            </Link>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResetDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  resetData: PropTypes.func.isRequired\n}\n\nexport default compose(\n  withStyles(styles),\n  connect(null, { resetData })\n)(ResetDialog)","import React from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport DefaultCurrencySelect from './DefaultCurrencySelect'\nimport ResetDialog from './ResetDialog'\n\nconst SettingsPage = () => (\n  <List disablePadding={true}>\n    <ListSubheader disableSticky={true}>Settings</ListSubheader>\n    <Divider />\n    <ListItem>\n      <ListItemText primary=\"Default Currency\" />\n      <DefaultCurrencySelect />\n    </ListItem>\n    <Divider />\n\n    <ListItem>\n      <ListItemText primary=\"Reset All Data\" />\n      <ResetDialog />\n    </ListItem>\n    <Divider />\n  </List>\n)\n\nexport default SettingsPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MoreIcon from '@material-ui/icons/MoreVert'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Link } from 'react-router-dom'\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  },\n  menuItem: {\n    minWidth: '120px'\n  }\n}\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { menuAnchorEl: null }\n  }\n\n  handleClick = event => {\n    this.setState({ menuAnchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ menuAnchorEl: null })\n  }\n\n  render() {\n    const { classes } = this.props\n    const { menuAnchorEl } = this.state\n\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <Link to=\"/\" className=\"noDecoration inheritColor\">React Wallet</Link>\n          </Typography>\n          <IconButton\n            aria-owns={menuAnchorEl ? 'simple-menu' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={menuAnchorEl}\n            open={Boolean(menuAnchorEl)}\n            onClose={this.handleClose}\n          >\n            <MenuItem component={Link} to=\"/history\" onClick={this.handleClose} className={classes.menuItem}>History</MenuItem>\n            <MenuItem component={Link} to=\"/settings\" onClick={this.handleClose} className={classes.menuItem}>Settings</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(Header)","import moment from 'moment'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport Notice from '../common/Notice'\n\nconst HistoryList = ({ history }) => (\n  history.length ?\n    <List disablePadding={true}>\n      <ListSubheader disableSticky={true}>History</ListSubheader>\n      <Divider />\n      {history.map((el, key) =>\n        <React.Fragment key={key}>\n          <ListItem>\n            <ListItemText\n                primary={el.text}\n                secondary={moment(el.date).calendar()}\n                secondaryTypographyProps={{style: {textAlign: 'right'}}}/>\n          </ListItem>\n          <Divider />\n        </React.Fragment>\n      )}\n    </List>\n    :\n    <Notice title=\"Your history is empty\">\n      Add some accounts and make some transfers to populate the list\n    </Notice>\n)\n\nHistoryList.propTypes = {\n  history: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  history: state.history\n})\n\nexport default connect(mapStateToProps)(HistoryList)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\n\nimport GroupList from './accounts/GroupList'\nimport Details from './accounts/Details'\nimport ErrorPage from './error/ErrorPage'\nimport SettingsPage from './settings/SettingsPage'\nimport Header from './Header'\nimport HistoryList from './history/HistoryList'\n\nconst styles = (theme) => ({\n  paper: {\n    width: 'auto',\n    margin: theme.spacing.unit * 2,\n    [theme.breakpoints.up(680)]: {\n      width: 600,\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  }\n})\n\nconst RouterMap = ({ classes }) => (\n  <Router>\n    <>\n      <Header />\n      <Paper className={classes.paper}>\n        <Switch>\n          <Route exact path=\"/\" component={GroupList} />\n          <Route path=\"/history\" component={HistoryList} />\n          <Route path=\"/settings\" component={SettingsPage} />\n          <Route path='/details/:accountId' render={(props) => {\n            return <Details {...props} />\n          }} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </Paper>\n    </>\n  </Router>\n)\n\nexport default compose(\n  withStyles(styles),\n  connect(),\n)(RouterMap)","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport RouterMap from './RouterMap'\nimport { fetchRates } from '../redux/actions'\n\nclass App extends Component {\n  componentDidMount() {\n    const currencies = this.props.accounts.map((a) => a.currency)\n    if ([...new Set(currencies)] > 1) {\n      this.props.fetchRates(this.props.defaultCurrency)\n    }\n  }\n\n  render() {\n    return (\n      <RouterMap />\n    )\n  }\n}\n\nApp.propTypes = {\n  accounts: PropTypes.array.isRequired,\n  defaultCurrency: PropTypes.string.isRequired,\n  fetchRates: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  accounts: state.accounts,\n  defaultCurrency: state.settings.defaultCurrency\n})\n\nexport default connect(mapStateToProps, { fetchRates })(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { uniqueId } from '../../lib/helpers'\n\nconst initialState = [\n  'Cash',\n  'Cards & Bank Accounts',\n  'Debts',\n  'Investments',\n  'Others'\n].map((name) => ({\n  id: uniqueId(),\n  name\n}))\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_GROUP': {\n      return state.map((group) => {\n        if (group.id === action.payload.groupId) {\n          return {\n            ...group,\n            collapsed: action.payload.collapsed\n          }\n        }\n        return group\n      })\n    }\n\n    default:\n      return state\n  }\n}","const initialState = {\n  defaultCurrency: 'EUR'\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_DEFAULT_CURRENCY': {\n      return {\n        ...state,\n        defaultCurrency: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\n\nimport accounts from './accounts'\nimport groups from './groups'\nimport history from './history'\nimport rates from './rates'\nimport settings from './settings'\nimport { uniqueId } from '../../lib/helpers'\n\nconst allReducers = combineReducers({\n  accounts,\n  groups,\n  history,\n  rates,\n  settings\n})\n\nexport default (state, action) => {\n  if (action.type === 'RESET_DATA') {\n    // not a state mutation, just reassigning the ref of the local var state\n    state = undefined\n  }\n\n  if (action.type === 'LOAD_DEMO_DATA') {\n    state = {\n      ...state,\n      accounts: [\n        // Cash\n        { name: 'Wallet', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups[0].id },\n        { name: 'Travel Change', id: uniqueId(), currency: 'EUR', value: 95, groupId: state.groups[0].id },\n\n        // Cards & Bank Accounts\n        { name: 'Debit Card', id: uniqueId(), currency: 'USD', value: 8500, groupId: state.groups[1].id },\n        { name: 'TransferWise', id: uniqueId(), currency: 'USD', value: 1500, groupId: state.groups[1].id },\n        { name: 'Canadian Account', id: uniqueId(), currency: 'CAD', value: 500, groupId: state.groups[1].id },\n\n        // Investments\n        { name: 'P2P Lending', id: uniqueId(), currency: 'EUR', value: 5000, groupId: state.groups[3].id },\n        { name: 'Stocks', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups[3].id },\n        { name: 'Crypto funds', id: uniqueId(), currency: 'USD', value: 5000, groupId: state.groups[3].id },\n\n        // Other Accounts\n        { name: 'PayPal', id: uniqueId(), currency: 'USD', value: 500, groupId: state.groups[4].id }\n      ],\n      settings: {\n        defaultCurrency: 'USD'\n      }\n    }\n  }\n\n  return allReducers(state, action)\n}\n","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_ACCOUNT': {\n      return [...state, action.payload]\n    }\n\n    case 'EDIT_ACCOUNT': {\n      return state.map((account) => {\n        if (account.id === action.payload.id) {\n          return {\n            ...account,\n            ...action.payload\n          }\n        }\n        return account\n      })\n    }\n\n    case 'DELETE_ACCOUNT': {\n      return state.filter((account) => account.id !== action.payload)\n    }\n\n    case 'MAKE_DEPOSIT': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.value\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_WITHDRAWAL': {\n      return state.map((account) => {\n        if (account.id === action.payload.accountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.value)\n          }\n        }\n        return account\n      })\n    }\n  \n    case 'MAKE_TRANSFER': {\n      return state.map((account) => {\n        if (account.id === action.payload.fromAccountId) {\n          return {\n            ...account,\n            value: Math.max(0, Number(account.value) - action.payload.fromAccountValue)\n          }\n        }\n  \n        if (account.id === action.payload.toAccountId) {\n          return {\n            ...account,\n            value: Number(account.value) + action.payload.toAccountValue\n          }\n        }\n        return account\n      })\n    }\n\n    default:\n      return state\n  }\n}","export default (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_HISTORY': {\n      action.payload.text = action.payload.text.replace(/ {2}/g, '')\n      return [action.payload, ...state]\n    }\n\n    default:\n      return state\n  }\n}","export default (state = {}, action) => {\n  switch (action.type) {\n    case 'FETCH_RATES_SUCCESS': {\n      return {...state, ...action.payload }\n    }\n\n    default:\n      return state\n  }\n}","import { throttle } from 'lodash'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers/index'\n\nconst initialState = {\n  accounts: [],\n  history: [],\n  rates: {},\n  ...JSON.parse(localStorage.getItem('reactwallet'))\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(throttle(() => {\n  localStorage.setItem('reactwallet', JSON.stringify(store.getState()))\n}, 1000))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}